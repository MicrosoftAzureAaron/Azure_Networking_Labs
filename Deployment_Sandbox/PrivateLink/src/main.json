{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "13634346994355496154"
    }
  },
  "parameters": {
    "locationA": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Datacenter location for the Hub and Spoke A resources"
      }
    },
    "locationB": {
      "type": "string",
      "defaultValue": "[parameters('locationA')]",
      "metadata": {
        "description": "Azure Datacenter location for the Spoke B resources.  \nUse the same region as locationA if you do not want to test multi-region\n"
      }
    },
    "locationOnPrem": {
      "type": "string",
      "defaultValue": "[parameters('locationA')]",
      "metadata": {
        "description": "Azure Datacenter location for the \"OnPrem\" resources"
      }
    },
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_Size": {
      "type": "string",
      "defaultValue": "Standard_D2as_v4",
      "metadata": {
        "description": "Size of the Virtual Machines"
      }
    },
    "acceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True enables Accelerated Networking and False disabled it.  \nNot all VM sizes support Accel Net (i.e. Standard_B2ms).  \nI'd recommend Standard_D2s_v3 for a cheap VM that supports Accel Net.\n"
      }
    },
    "storageAccount_Name": {
      "type": "string",
      "defaultValue": "[format('storagepl{0}', uniqueString(resourceGroup().id))]",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Storage account name restrictions:\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\n"
      }
    },
    "usingAzureFirewall": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set this to true if you want to use an Azure Firewall in the Hub Virtual Network."
      }
    },
    "vpn_SharedKey": {
      "type": "securestring",
      "metadata": {
        "description": "VPN Shared Key used for authenticating VPN connections"
      }
    }
  },
  "variables": {
    "virtualMachine_ScriptFileLocation": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hub_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.0.0.0/16"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetwork_Name": {
            "value": "hub_VNet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13797875414295410429"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "routeTable_disableBgpRoutePropagation": {
              "type": "bool",
              "defaultValue": false
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": "[parameters('routeTable_disableBgpRoutePropagation')]"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "routeTable_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            },
            "networkSecurityGroup_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeA_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.1.0.0/16"
          },
          "dnsServers": {
            "copy": [
              {
                "name": "value",
                "count": "[length(range(0, 2))]",
                "input": "[reference(resourceId('Microsoft.Resources/deployments', format('hub-DnsVM{0}', range(0, 2)[range(0, 2)[copyIndex('value')]])), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
              }
            ]
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetwork_Name": {
            "value": "spokeA_VNet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13797875414295410429"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "routeTable_disableBgpRoutePropagation": {
              "type": "bool",
              "defaultValue": false
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": "[parameters('routeTable_disableBgpRoutePropagation')]"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "routeTable_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            },
            "networkSecurityGroup_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "hub_DnsVMs"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeB_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.2.0.0/16"
          },
          "dnsServers": {
            "copy": [
              {
                "name": "value",
                "count": "[length(range(0, 2))]",
                "input": "[reference(resourceId('Microsoft.Resources/deployments', format('hub-DnsVM{0}', range(0, 2)[range(0, 2)[copyIndex('value')]])), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
              }
            ]
          },
          "location": {
            "value": "[parameters('locationB')]"
          },
          "virtualNetwork_Name": {
            "value": "spokeB_VNet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13797875414295410429"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "routeTable_disableBgpRoutePropagation": {
              "type": "bool",
              "defaultValue": false
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": "[parameters('routeTable_disableBgpRoutePropagation')]"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "routeTable_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            },
            "networkSecurityGroup_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "hub_DnsVMs"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubToSpokeAPeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_Hub_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          },
          "virtualNetwork_Spoke_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeA_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17865971218722439423"
            }
          },
          "parameters": {
            "virtualNetwork_Hub_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Hub Virtual Network"
              }
            },
            "virtualNetwork_Spoke_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Spoke Virtual Network"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Hub_Name'), format('{0}to{1}', parameters('virtualNetwork_Hub_Name'), parameters('virtualNetwork_Spoke_Name')))]",
              "properties": {
                "allowGatewayTransit": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Spoke_Name'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Spoke_Name'), format('{0}to{1}', parameters('virtualNetwork_Spoke_Name'), parameters('virtualNetwork_Hub_Name')))]",
              "properties": {
                "useRemoteGateways": true,
                "allowGatewayTransit": true,
                "allowForwardedTraffic": true,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Hub_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_to_OnPrem_conn')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPrem_to_Hub_conn')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeA_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubToSpokeBPeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_Hub_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          },
          "virtualNetwork_Spoke_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17865971218722439423"
            }
          },
          "parameters": {
            "virtualNetwork_Hub_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Hub Virtual Network"
              }
            },
            "virtualNetwork_Spoke_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Spoke Virtual Network"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Hub_Name'), format('{0}to{1}', parameters('virtualNetwork_Hub_Name'), parameters('virtualNetwork_Spoke_Name')))]",
              "properties": {
                "allowGatewayTransit": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": false,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Spoke_Name'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Spoke_Name'), format('{0}to{1}', parameters('virtualNetwork_Spoke_Name'), parameters('virtualNetwork_Hub_Name')))]",
              "properties": {
                "useRemoteGateways": true,
                "allowGatewayTransit": true,
                "allowForwardedTraffic": true,
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Hub_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_to_OnPrem_conn')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPrem_to_Hub_conn')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeB_VNet')]"
      ]
    },
    {
      "copy": {
        "name": "hub_DnsVMs",
        "count": "[length(range(0, 2))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('hub-DnsVM{0}', range(0, 2)[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "[format('hub-DnsVM{0}', range(0, 2)[copyIndex()])]"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_DNS.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_DNS.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "427334920654472171"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeA-WinVM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeA_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "spokeA-WinVM"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_General.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "427334920654472171"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubToSpokeAPeering')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeA_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeB-WinVM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationB')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "spokeB-WinVM"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_WebServer.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_WebServer.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "427334920654472171"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubToSpokeBPeering')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "privateLink",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "internalLoadBalancer_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('locationB')]"
          },
          "networkInterface_IPConfig_Names": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB-WinVM'), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            ]
          },
          "networkInterface_Names": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB-WinVM'), '2022-09-01').outputs.networkInterface_Name.value]"
            ]
          },
          "networkInterface_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "privateEndpoint_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.privateEndpoint_SubnetID.value]"
          },
          "privateLink_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.privateLinkService_SubnetID.value]"
          },
          "privateLink_Name": {
            "value": "spokeB_PrivateLink"
          },
          "privateEndpoint_name": {
            "value": "hub_PrivateEndpoint_to_PrivateLink"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3956129625471697862"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "internalLoadBalancer_Name": {
              "type": "string",
              "defaultValue": "internalLoadBalancer",
              "metadata": {
                "description": "Name of the Azure Load Balancer"
              }
            },
            "internalLoadBalancer_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Load Balancer will be deployed to"
              }
            },
            "privateEndpoint_name": {
              "type": "string",
              "defaultValue": "pe_to_pl",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Endpoint will be deployed to"
              }
            },
            "privateLink_Name": {
              "type": "string",
              "defaultValue": "pl",
              "metadata": {
                "description": "Name of the Private Link Service"
              }
            },
            "privateLink_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Link Service will be deployed to"
              }
            },
            "networkInterface_Names": {
              "type": "array",
              "metadata": {
                "description": "Name of the NIC of the Virtual Machine that will be put behind the Private Link Service and Load Balancer"
              }
            },
            "networkInterface_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID of the NIC of the Virtual Machine that will be put behind the Private Link Service and Load Balancer"
              }
            },
            "networkInterface_IPConfig_Names": {
              "type": "array",
              "metadata": {
                "description": "Name of the ipconfig of the NIC of the Virtual Machine that will be put behind the Private Link Service and Load Balancer"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
              }
            },
            "tcpPort": {
              "type": "int",
              "defaultValue": 443,
              "metadata": {
                "description": "TCP Port that will be used for connecting to the Virtual Machine behind the Private Link Service and Load Balancer"
              }
            },
            "enableProxyProtocol": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "True enables Proxy Protocol and False disables it"
              }
            },
            "enableTcpReset": {
              "type": "bool",
              "defaultValue": false
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "copy": {
                "name": "networkInterface",
                "count": "[length(range(0, length(parameters('networkInterface_Names'))))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}', parameters('networkInterface_Names')[range(0, length(parameters('networkInterface_Names')))[copyIndex()]])]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[format('{0}', parameters('networkInterface_IPConfig_Names')[range(0, length(parameters('networkInterface_Names')))[copyIndex()]])]",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('networkInterface_SubnetID')]"
                      },
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[reference(resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name')), '2022-09-01').backendAddressPools[0].id]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2022-09-01",
              "name": "[parameters('internalLoadBalancer_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "fip",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('internalLoadBalancer_SubnetID')]"
                      },
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "bep"
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "forwardAll",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('internalLoadBalancer_Name'), 'fip')]"
                      },
                      "frontendPort": 0,
                      "backendPort": 0,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 4,
                      "protocol": "All",
                      "enableTcpReset": "[parameters('enableTcpReset')]",
                      "loadDistribution": "Default",
                      "disableOutboundSnat": true,
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('internalLoadBalancer_Name'), 'bep')]"
                      },
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('internalLoadBalancer_Name'), format('probe{0}', parameters('tcpPort')))]"
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "[format('probe{0}', parameters('tcpPort'))]",
                    "properties": {
                      "protocol": "Tcp",
                      "port": "[parameters('tcpPort')]",
                      "intervalInSeconds": 5,
                      "numberOfProbes": 1,
                      "probeThreshold": 1
                    }
                  }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-09-01",
              "name": "[parameters('privateEndpoint_name')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('privateEndpoint_name')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLink_Name'))]"
                    }
                  }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[format('{0}-nic', parameters('privateEndpoint_name'))]",
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLink_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateLinkServices",
              "apiVersion": "2022-09-01",
              "name": "[parameters('privateLink_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "enableProxyProtocol": "[parameters('enableProxyProtocol')]",
                "loadBalancerFrontendIpConfigurations": [
                  {
                    "id": "[format('{0}/frontendIPConfigurations/fip', resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name')))]"
                  }
                ],
                "ipConfigurations": [
                  {
                    "name": "default-1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('privateLink_SubnetID')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name'))]"
              ]
            }
          ],
          "outputs": {
            "internalLoadBalancer_FrontendIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name')), '2022-09-01').frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "privateEndpoint_NetworkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_name')), '2022-09-01').customNetworkInterfaceName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'spokeB-WinVM')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccount",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationB')]"
          },
          "storageAccount_Name": {
            "value": "[parameters('storageAccount_Name')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "10592938889878624257"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "storageAccount_Name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 24,
              "metadata": {
                "description": "Storage account name restrictions:\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\n"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccount_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccount_Name'), 'default')]",
              "properties": {
                "changeFeed": {
                  "enabled": false
                },
                "restorePolicy": {
                  "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": true,
                  "days": 7
                },
                "isVersioningEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccount_Name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccount_Name'), 'default', 'defaultfileshare')]",
              "properties": {
                "accessTier": "Hot",
                "shareQuota": 1024
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccount_Name'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageaccount_Blob_FQDN": {
              "type": "string",
              "value": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8)), 1))]"
            },
            "storageaccount_File_FQDN": {
              "type": "string",
              "value": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8)), 1))]"
            },
            "storageAccount_Name": {
              "type": "string",
              "value": "[parameters('storageAccount_Name')]"
            },
            "storageAccount_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
            },
            "storageAccount_BlobServices_Name": {
              "type": "string",
              "value": "default"
            },
            "storageAccountFileShare_Name": {
              "type": "string",
              "value": "defaultfileshare"
            },
            "storageAccount_key0": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').keys[0].value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hub_StorageAccount_Blob_PrivateEndpoint",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "groupID": {
            "value": "blob"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "privateDNSZone_Name": {
            "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
          },
          "privateEndpoint_Name": {
            "value": "[format('hub_{0}_blob_pe', parameters('storageAccount_Name'))]"
          },
          "privateEndpoint_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.privateEndpoint_SubnetID.value]"
          },
          "privateLinkServiceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.storageAccount_ID.value]"
          },
          "virtualNetwork_IDs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_ID.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "339027376688421692"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "privateEndpoint_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "privateLinkServiceId": {
              "type": "string"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Endpoint will be deployed to"
              }
            },
            "virtualNetwork_IDs": {
              "type": "array",
              "metadata": {
                "description": "Resource ID of the Virtual Networks to be linked to the Private DNS Zone"
              }
            },
            "groupID": {
              "type": "string",
              "metadata": {
                "description": "The ID of a group obtained from the remote resource that this private endpoint should connect to."
              }
            },
            "privateDNSZone_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private DNS Zone\nExample: privatelink.blob.${environment().suffixes.storage}"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "resource_Name": "[last(split(parameters('privateLinkServiceId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[parameters('privateEndpoint_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}_to_{1}', parameters('privateEndpoint_Name'), variables('resource_Name'))]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                      "groupIds": [
                        "[parameters('groupID')]"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDNSZone_Name')]",
              "location": "global",
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('privateEndpoint_Name'), format('{0}ZoneGroup', parameters('groupID')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name'))]"
              ]
            },
            {
              "copy": {
                "name": "virtualNetworkLink_File",
                "count": "[length(parameters('virtualNetwork_IDs'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', parameters('privateDNSZone_Name'), format('{0}_to_{1}', parameters('privateEndpoint_Name'), last(split(parameters('virtualNetwork_IDs')[copyIndex()], '/'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetwork_IDs')[copyIndex()]]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name'))]"
              ]
            }
          ],
          "outputs": {
            "privateEndpoint_NetworkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name')), '2023-05-01').customNetworkInterfaceName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]"
      ]
    },
    {
      "condition": "[parameters('usingAzureFirewall')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubAzureFirewall",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "azureFirewall_ManagementSubnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.azureFirewallManagement_SubnetID.value]"
          },
          "azureFirewall_Name": {
            "value": "hub_AzFW"
          },
          "azureFirewall_SKU": {
            "value": "Basic"
          },
          "azureFirewall_Subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.azureFirewall_SubnetID.value]"
          },
          "azureFirewallPolicy_Name": {
            "value": "hub_AzFWPolicy"
          },
          "location": {
            "value": "[parameters('locationA')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3831283260328725977"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "azureFirewall_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Firewall within the vHub A"
              }
            },
            "azureFirewall_SKU": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
              }
            },
            "azureFirewallPolicy_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Firewall Policy"
              }
            },
            "azureFirewall_Subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Firewall Subnet.  Note: The subnet name must be \"AzureFirewallSubnet"
              }
            },
            "azureFirewall_ManagementSubnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Firewall Management Subnet.  Note: The subnet name must be \"AzureFirewallManagementSubnet"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP', parameters('azureFirewall_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_Management_PIP', parameters('azureFirewall_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2022-07-01",
              "name": "[parameters('azureFirewallPolicy_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "tier": "[parameters('azureFirewall_SKU')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2022-11-01",
              "name": "[parameters('azureFirewall_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "AZFW_VNet",
                  "tier": "[parameters('azureFirewall_SKU')]"
                },
                "additionalProperties": {},
                "managementIpConfiguration": {
                  "name": "managementipconfig",
                  "properties": {
                    "publicIPAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]"
                    },
                    "subnet": {
                      "id": "[parameters('azureFirewall_ManagementSubnet_ID')]"
                    }
                  }
                },
                "ipConfigurations": [
                  {
                    "name": "ipconfiguration",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('azureFirewall_Subnet_ID')]"
                      }
                    }
                  }
                ],
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('azureFirewallPolicy_Name'), 'DefaultNetworkRuleCollectionGroup')]",
              "properties": {
                "priority": 200,
                "ruleCollections": [
                  {
                    "name": "allowall",
                    "priority": 100,
                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                    "action": {
                      "type": "Allow"
                    },
                    "rules": [
                      {
                        "ruleType": "NetworkRule",
                        "name": "any",
                        "ipProtocols": [
                          "any"
                        ],
                        "sourceAddresses": [
                          "*"
                        ],
                        "destinationAddresses": [
                          "*"
                        ],
                        "destinationPorts": [
                          "*"
                        ]
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
              ]
            }
          ],
          "outputs": {
            "azureFirewall_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall_Name')), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_to_OnPrem_conn')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPrem_to_Hub_conn')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]"
      ]
    },
    {
      "condition": "[parameters('usingAzureFirewall')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "udrToAzFW_Hub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "addressPrefixs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeA_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]"
            ]
          },
          "nextHopType": {
            "value": "VirtualAppliance"
          },
          "routeTable_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.routeTable_Name.value]"
          },
          "routeTableRoute_Name": {
            "value": "toAzFW"
          },
          "nextHopIpAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubAzureFirewall'), '2022-09-01').outputs.azureFirewall_PrivateIPAddress.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "2832723045023485587"
            }
          },
          "parameters": {
            "routeTable_Name": {
              "type": "string"
            },
            "routeTableRoute_Name": {
              "type": "string"
            },
            "addressPrefixs": {
              "type": "array"
            },
            "nextHopIpAddress": {
              "type": "string",
              "defaultValue": ""
            },
            "nextHopType": {
              "type": "string",
              "allowedValues": [
                "None",
                "VirtualAppliance",
                "Internet",
                "VirtualNetworkGateway",
                "VnetLocal"
              ]
            }
          },
          "resources": [
            {
              "copy": {
                "name": "routeTable_Route_Firewall",
                "count": "[length(range(0, length(parameters('addressPrefixs'))))]"
              },
              "condition": "[equals(parameters('nextHopType'), 'VirtualAppliance')]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('routeTable_Name'), format('{0}{1}', parameters('routeTableRoute_Name'), range(0, length(parameters('addressPrefixs')))[copyIndex()]))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefixs')[range(0, length(parameters('addressPrefixs')))[copyIndex()]]]",
                "nextHopType": "[parameters('nextHopType')]",
                "nextHopIpAddress": "[parameters('nextHopIpAddress')]"
              }
            },
            {
              "copy": {
                "name": "routeTable_Route",
                "count": "[length(range(0, length(parameters('addressPrefixs'))))]"
              },
              "condition": "[not(equals(parameters('nextHopType'), 'VirtualAppliance'))]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('routeTable_Name'), format('{0}{1}', parameters('routeTableRoute_Name'), range(0, length(parameters('addressPrefixs')))[copyIndex()]))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefixs')[range(0, length(parameters('addressPrefixs')))[copyIndex()]]]",
                "nextHopType": "[parameters('nextHopType')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubAzureFirewall')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeB_VNet')]"
      ]
    },
    {
      "condition": "[parameters('usingAzureFirewall')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "udrToAzFW_SpokeA",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "addressPrefixs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeA_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]"
            ]
          },
          "nextHopType": {
            "value": "VirtualAppliance"
          },
          "routeTable_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeA_VNet'), '2022-09-01').outputs.routeTable_Name.value]"
          },
          "routeTableRoute_Name": {
            "value": "toAzFW"
          },
          "nextHopIpAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubAzureFirewall'), '2022-09-01').outputs.azureFirewall_PrivateIPAddress.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "2832723045023485587"
            }
          },
          "parameters": {
            "routeTable_Name": {
              "type": "string"
            },
            "routeTableRoute_Name": {
              "type": "string"
            },
            "addressPrefixs": {
              "type": "array"
            },
            "nextHopIpAddress": {
              "type": "string",
              "defaultValue": ""
            },
            "nextHopType": {
              "type": "string",
              "allowedValues": [
                "None",
                "VirtualAppliance",
                "Internet",
                "VirtualNetworkGateway",
                "VnetLocal"
              ]
            }
          },
          "resources": [
            {
              "copy": {
                "name": "routeTable_Route_Firewall",
                "count": "[length(range(0, length(parameters('addressPrefixs'))))]"
              },
              "condition": "[equals(parameters('nextHopType'), 'VirtualAppliance')]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('routeTable_Name'), format('{0}{1}', parameters('routeTableRoute_Name'), range(0, length(parameters('addressPrefixs')))[copyIndex()]))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefixs')[range(0, length(parameters('addressPrefixs')))[copyIndex()]]]",
                "nextHopType": "[parameters('nextHopType')]",
                "nextHopIpAddress": "[parameters('nextHopIpAddress')]"
              }
            },
            {
              "copy": {
                "name": "routeTable_Route",
                "count": "[length(range(0, length(parameters('addressPrefixs'))))]"
              },
              "condition": "[not(equals(parameters('nextHopType'), 'VirtualAppliance'))]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('routeTable_Name'), format('{0}{1}', parameters('routeTableRoute_Name'), range(0, length(parameters('addressPrefixs')))[copyIndex()]))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefixs')[range(0, length(parameters('addressPrefixs')))[copyIndex()]]]",
                "nextHopType": "[parameters('nextHopType')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubAzureFirewall')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeB_VNet')]"
      ]
    },
    {
      "condition": "[parameters('usingAzureFirewall')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "udrToAzFW_SpokeB",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "addressPrefixs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeA_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.virtualNetwork_AddressPrefix.value]"
            ]
          },
          "nextHopType": {
            "value": "VirtualAppliance"
          },
          "routeTable_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeB_VNet'), '2022-09-01').outputs.routeTable_Name.value]"
          },
          "routeTableRoute_Name": {
            "value": "toAzFW"
          },
          "nextHopIpAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubAzureFirewall'), '2022-09-01').outputs.azureFirewall_PrivateIPAddress.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "2832723045023485587"
            }
          },
          "parameters": {
            "routeTable_Name": {
              "type": "string"
            },
            "routeTableRoute_Name": {
              "type": "string"
            },
            "addressPrefixs": {
              "type": "array"
            },
            "nextHopIpAddress": {
              "type": "string",
              "defaultValue": ""
            },
            "nextHopType": {
              "type": "string",
              "allowedValues": [
                "None",
                "VirtualAppliance",
                "Internet",
                "VirtualNetworkGateway",
                "VnetLocal"
              ]
            }
          },
          "resources": [
            {
              "copy": {
                "name": "routeTable_Route_Firewall",
                "count": "[length(range(0, length(parameters('addressPrefixs'))))]"
              },
              "condition": "[equals(parameters('nextHopType'), 'VirtualAppliance')]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('routeTable_Name'), format('{0}{1}', parameters('routeTableRoute_Name'), range(0, length(parameters('addressPrefixs')))[copyIndex()]))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefixs')[range(0, length(parameters('addressPrefixs')))[copyIndex()]]]",
                "nextHopType": "[parameters('nextHopType')]",
                "nextHopIpAddress": "[parameters('nextHopIpAddress')]"
              }
            },
            {
              "copy": {
                "name": "routeTable_Route",
                "count": "[length(range(0, length(parameters('addressPrefixs'))))]"
              },
              "condition": "[not(equals(parameters('nextHopType'), 'VirtualAppliance'))]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('routeTable_Name'), format('{0}{1}', parameters('routeTableRoute_Name'), range(0, length(parameters('addressPrefixs')))[copyIndex()]))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefixs')[range(0, length(parameters('addressPrefixs')))[copyIndex()]]]",
                "nextHopType": "[parameters('nextHopType')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubAzureFirewall')]",
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubBastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastion_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.bastion_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "bastion_name": {
            "value": "hub_bastion"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8940753681302617038"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "bastion_name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Bastion"
              }
            },
            "bastion_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
              }
            },
            "enableTunneling": {
              "type": "bool",
              "defaultValue": false
            },
            "enableIpConnect": {
              "type": "bool",
              "defaultValue": false
            },
            "disableCopyPaste": {
              "type": "bool",
              "defaultValue": false
            },
            "enableShareableLink": {
              "type": "bool",
              "defaultValue": false
            },
            "enableFileCopy": {
              "type": "bool",
              "defaultValue": false
            },
            "enableKerberos": {
              "type": "bool",
              "defaultValue": false
            },
            "enablePrivateOnlyBastion": {
              "type": "bool",
              "defaultValue": false
            },
            "bastion_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "SKU of the Azure Bastion"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2024-05-01",
              "name": "[parameters('bastion_name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('bastion_SKU')]"
              },
              "properties": {
                "scaleUnits": 2,
                "enableTunneling": "[parameters('enableTunneling')]",
                "enableIpConnect": "[parameters('enableIpConnect')]",
                "disableCopyPaste": "[parameters('disableCopyPaste')]",
                "enableShareableLink": "[parameters('enableShareableLink')]",
                "enableFileCopy": "[parameters('enableFileCopy')]",
                "enableKerberos": "[parameters('enableKerberos')]",
                "enablePrivateOnlyBastion": "[parameters('enablePrivateOnlyBastion')]",
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('bastion_SubnetID')]"
                      }
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('bastion_name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dnsPrivateResolver",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dnsPrivateResolver_Name": {
            "value": "hub_DNSPrivateResolver"
          },
          "dnsPrivateResolver_Inbound_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.privateResolver_Inbound_SubnetID.value]"
          },
          "dnsPrivateResolver_Outbound_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.privateResolver_Outbound_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetwork_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.virtualNetwork_ID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14730579850621794979"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "the location for resolver VNET and dns private resolver - Azure DNS Private Resolver available in specific region, refer the documenation to select the supported region for this deployment. For more information https://docs.microsoft.com/azure/dns/dns-private-resolver-overview#regional-availability"
              }
            },
            "virtualNetwork_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Virtual Network to which the DNS Private resolver will be added."
              }
            },
            "dnsPrivateResolver_Inbound_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Subnet to which the DNS Private resolver Inbound Endpoint will be added."
              }
            },
            "dnsPrivateResolver_Outbound_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Subnet to which the DNS Private resolver Outbound Endpoint will be added."
              }
            },
            "dnsPrivateResolver_Name": {
              "type": "string",
              "defaultValue": "dnsResolver",
              "metadata": {
                "description": "name of the dns private resolver"
              }
            },
            "inboundEndpoint_Name": {
              "type": "string",
              "defaultValue": "endpoint-inbound",
              "metadata": {
                "description": "name that will be used for the private resolver inbound endpoint"
              }
            },
            "outboundEndpoint_Name": {
              "type": "string",
              "defaultValue": "endpoint-outbound",
              "metadata": {
                "description": "name that will be used for the private resolver outbound endpoint"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/dnsResolvers",
              "apiVersion": "2022-07-01",
              "name": "[parameters('dnsPrivateResolver_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetwork": {
                  "id": "[parameters('virtualNetwork_ID')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/dnsResolvers/inboundEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dnsPrivateResolver_Name'), parameters('inboundEndpoint_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "privateIpAllocationMethod": "Dynamic",
                    "subnet": {
                      "id": "[parameters('dnsPrivateResolver_Inbound_SubnetID')]"
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsResolvers', parameters('dnsPrivateResolver_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/dnsResolvers/outboundEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dnsPrivateResolver_Name'), parameters('outboundEndpoint_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('dnsPrivateResolver_Outbound_SubnetID')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsResolvers', parameters('dnsPrivateResolver_Name'))]"
              ]
            }
          ],
          "outputs": {
            "dnsPrivateResolver_Outbound_Endpoint_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/dnsResolvers/outboundEndpoints', parameters('dnsPrivateResolver_Name'), parameters('outboundEndpoint_Name'))]"
            },
            "privateDNSResolver_Inbound_Endpoint_IPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', parameters('dnsPrivateResolver_Name'), parameters('inboundEndpoint_Name')), '2022-07-01').ipConfigurations[0].privateIpAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "onprem_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.100.0.0/16"
          },
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetwork_Name": {
            "value": "onprem_VNet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13797875414295410429"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "routeTable_disableBgpRoutePropagation": {
              "type": "bool",
              "defaultValue": false
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": "[parameters('routeTable_disableBgpRoutePropagation')]"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "routeTable_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            },
            "networkSecurityGroup_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
            }
          }
        }
      }
    },
    {
      "copy": {
        "name": "OnPremVM_WinDNS",
        "count": "[length(range(0, 2))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('OnPremWinDNS{0}', range(0, 2)[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'onprem_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "[format('OnPrem-WinDNS{0}', range(0, 2)[copyIndex()])]"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_DNS.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_DNS.ps1 -Username {0} -PrivateDNSZone \"privatelink.blob.core.windows.net\" -ConditionalForwarderIPAddress {1}', parameters('virtualMachine_AdminUsername'), reference(resourceId('Microsoft.Resources/deployments', 'dnsPrivateResolver'), '2022-09-01').outputs.privateDNSResolver_Inbound_Endpoint_IPAddress.value)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "427334920654472171"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'dnsPrivateResolver')]",
        "[resourceId('Microsoft.Resources/deployments', 'onprem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPremVirtualNetworkGateway",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetworkGateway_ASN": {
            "value": 65000
          },
          "virtualNetworkGateway_Name": {
            "value": "OnPrem_VNG"
          },
          "virtualNetworkGateway_Subnet_ResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'onprem_VNet'), '2022-09-01').outputs.gateway_SubnetID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "15330167770294849167"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resources are deployed to"
              }
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway"
              }
            },
            "virtualNetworkGateway_SKU": {
              "type": "string",
              "defaultValue": "VpnGw1",
              "allowedValues": [
                "Basic",
                "VpnGw1",
                "VpnGw2",
                "VpnGw3",
                "VpnGw4",
                "VpnGw5",
                "VpnGw1AZ",
                "VpnGw2AZ",
                "VpnGw3AZ",
                "VpnGw4AZ",
                "VpnGw5AZ"
              ],
              "metadata": {
                "description": "SKU of the Virtual Network Gateway"
              }
            },
            "vpnGatewayGeneration": {
              "type": "string",
              "defaultValue": "Generation1",
              "allowedValues": [
                "Generation1",
                "Generation2"
              ],
              "metadata": {
                "description": "Generation of the Virtual Network Gateway SKU\nGeneration1: Basic, VpnGw1-3, VpnGw1-3AZ\nGeneration2: VpnGw2-5, VpnGw2-5Az"
              }
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "metadata": {
                "description": "Virtul Network Gateway ASN for BGP"
              }
            },
            "virtualNetworkGateway_Subnet_ResourceID": {
              "type": "string",
              "metadata": {
                "description": "Virtual Network Resource ID"
              }
            },
            "activeActive": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Configures the Virtual Network Gateway as Active Active with two Public IP Addresses if True.  Default is False."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "ipConfiguration": "[if(parameters('activeActive'), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))))), createObject('properties', createObject('name', 'vNetGatewayConfig2', 'privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))))))), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))))))))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "condition": "[parameters('activeActive')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2023-02-01",
              "name": "[parameters('virtualNetworkGateway_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": "[variables('ipConfiguration')]",
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                  "name": "[parameters('virtualNetworkGateway_SKU')]",
                  "tier": "[parameters('virtualNetworkGateway_SKU')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": "[parameters('activeActive')]",
                "bgpSettings": {
                  "asn": "[parameters('virtualNetworkGateway_ASN')]",
                  "peerWeight": 0
                },
                "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkGateway_ResourceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "value": "[parameters('virtualNetworkGateway_Name')]"
            },
            "virtualNetworkGateway_BGPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
            },
            "virtualNetworkGateway_ActiveActive_BGPAddress1": {
              "type": "string",
              "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0], '')]"
            },
            "virtualNetworkGateway_ActiveActive_BGPAddress2": {
              "type": "string",
              "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0], '')]"
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
            },
            "virtualNetworkGateway_PublicIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
            },
            "virtualNetworkGateway_ActiveActive_PublicIPAddress02": {
              "type": "string",
              "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'onprem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "HubVirtualNetworkGateway",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetworkGateway_ASN": {
            "value": 65001
          },
          "virtualNetworkGateway_Name": {
            "value": "Hub_VNG"
          },
          "virtualNetworkGateway_Subnet_ResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub_VNet'), '2022-09-01').outputs.gateway_SubnetID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "15330167770294849167"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resources are deployed to"
              }
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway"
              }
            },
            "virtualNetworkGateway_SKU": {
              "type": "string",
              "defaultValue": "VpnGw1",
              "allowedValues": [
                "Basic",
                "VpnGw1",
                "VpnGw2",
                "VpnGw3",
                "VpnGw4",
                "VpnGw5",
                "VpnGw1AZ",
                "VpnGw2AZ",
                "VpnGw3AZ",
                "VpnGw4AZ",
                "VpnGw5AZ"
              ],
              "metadata": {
                "description": "SKU of the Virtual Network Gateway"
              }
            },
            "vpnGatewayGeneration": {
              "type": "string",
              "defaultValue": "Generation1",
              "allowedValues": [
                "Generation1",
                "Generation2"
              ],
              "metadata": {
                "description": "Generation of the Virtual Network Gateway SKU\nGeneration1: Basic, VpnGw1-3, VpnGw1-3AZ\nGeneration2: VpnGw2-5, VpnGw2-5Az"
              }
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "metadata": {
                "description": "Virtul Network Gateway ASN for BGP"
              }
            },
            "virtualNetworkGateway_Subnet_ResourceID": {
              "type": "string",
              "metadata": {
                "description": "Virtual Network Resource ID"
              }
            },
            "activeActive": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Configures the Virtual Network Gateway as Active Active with two Public IP Addresses if True.  Default is False."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "ipConfiguration": "[if(parameters('activeActive'), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))))), createObject('properties', createObject('name', 'vNetGatewayConfig2', 'privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))))))), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))))))))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "condition": "[parameters('activeActive')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2023-02-01",
              "name": "[parameters('virtualNetworkGateway_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": "[variables('ipConfiguration')]",
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                  "name": "[parameters('virtualNetworkGateway_SKU')]",
                  "tier": "[parameters('virtualNetworkGateway_SKU')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": "[parameters('activeActive')]",
                "bgpSettings": {
                  "asn": "[parameters('virtualNetworkGateway_ASN')]",
                  "peerWeight": 0
                },
                "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkGateway_ResourceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "value": "[parameters('virtualNetworkGateway_Name')]"
            },
            "virtualNetworkGateway_BGPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
            },
            "virtualNetworkGateway_ActiveActive_BGPAddress1": {
              "type": "string",
              "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0], '')]"
            },
            "virtualNetworkGateway_ActiveActive_BGPAddress2": {
              "type": "string",
              "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0], '')]"
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
            },
            "virtualNetworkGateway_PublicIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
            },
            "virtualNetworkGateway_ActiveActive_PublicIPAddress02": {
              "type": "string",
              "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPrem_to_Hub_conn",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetworkGateway_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
          },
          "vpn_Destination_ASN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
          },
          "vpn_Destination_BGPIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
          },
          "vpn_Destination_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
          },
          "vpn_Destination_PublicIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11860563558121779052"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the source VNG is deployed"
              }
            },
            "vpn_Destination_Name": {
              "type": "string",
              "metadata": {
                "description": "Friendly name for the destination VPN device"
              }
            },
            "vpn_Destination_PublicIPAddress": {
              "type": "string",
              "metadata": {
                "description": "Public IP Address of the Destination VPN.  Use this or FQDN.  Not both."
              }
            },
            "vpn_Destination_FQDN": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "FQDN of the Destination VPN.  Use this or Public IP Address.  Not both."
              }
            },
            "vpn_Destination_BGPIPAddress": {
              "type": "string",
              "metadata": {
                "description": "BGP Peering Address of the Destination VPN"
              }
            },
            "vpn_Destination_ASN": {
              "type": "int",
              "metadata": {
                "description": "ASN of the Destination VPN"
              }
            },
            "vpn_SharedKey": {
              "type": "securestring",
              "metadata": {
                "description": "VPN Shared Key used for authenticating VPN connections"
              }
            },
            "lngOptionalTag": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Option to add an additional identifier in case two LNGs of the same name might get created."
              }
            },
            "virtualNetworkGateway_ID": {
              "type": "string",
              "metadata": {
                "description": "Source Virtual Network Gateway ID"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualNetworkGateway_ID_Split": "[split(parameters('virtualNetworkGateway_ID'), '/')]",
            "virtualNetworkGateway_Name": "[variables('virtualNetworkGateway_ID_Split')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/connections",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_to_{1}_Connection', variables('virtualNetworkGateway_Name'), parameters('vpn_Destination_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[parameters('virtualNetworkGateway_ID')]",
                  "properties": {}
                },
                "localNetworkGateway2": {
                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]",
                  "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[parameters('vpn_SharedKey')]",
                "enableBgp": true,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]"
              ]
            },
            {
              "type": "Microsoft.Network/localNetworkGateways",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag'))]",
              "location": "[parameters('location')]",
              "properties": {
                "gatewayIpAddress": "[parameters('vpn_Destination_PublicIPAddress')]",
                "fqdn": "[parameters('vpn_Destination_FQDN')]",
                "bgpSettings": {
                  "asn": "[parameters('vpn_Destination_ASN')]",
                  "bgpPeeringAddress": "[parameters('vpn_Destination_BGPIPAddress')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Hub_to_OnPrem_conn",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetworkGateway_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
          },
          "vpn_Destination_ASN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
          },
          "vpn_Destination_BGPIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
          },
          "vpn_Destination_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
          },
          "vpn_Destination_PublicIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11860563558121779052"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the source VNG is deployed"
              }
            },
            "vpn_Destination_Name": {
              "type": "string",
              "metadata": {
                "description": "Friendly name for the destination VPN device"
              }
            },
            "vpn_Destination_PublicIPAddress": {
              "type": "string",
              "metadata": {
                "description": "Public IP Address of the Destination VPN.  Use this or FQDN.  Not both."
              }
            },
            "vpn_Destination_FQDN": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "FQDN of the Destination VPN.  Use this or Public IP Address.  Not both."
              }
            },
            "vpn_Destination_BGPIPAddress": {
              "type": "string",
              "metadata": {
                "description": "BGP Peering Address of the Destination VPN"
              }
            },
            "vpn_Destination_ASN": {
              "type": "int",
              "metadata": {
                "description": "ASN of the Destination VPN"
              }
            },
            "vpn_SharedKey": {
              "type": "securestring",
              "metadata": {
                "description": "VPN Shared Key used for authenticating VPN connections"
              }
            },
            "lngOptionalTag": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Option to add an additional identifier in case two LNGs of the same name might get created."
              }
            },
            "virtualNetworkGateway_ID": {
              "type": "string",
              "metadata": {
                "description": "Source Virtual Network Gateway ID"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualNetworkGateway_ID_Split": "[split(parameters('virtualNetworkGateway_ID'), '/')]",
            "virtualNetworkGateway_Name": "[variables('virtualNetworkGateway_ID_Split')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/connections",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_to_{1}_Connection', variables('virtualNetworkGateway_Name'), parameters('vpn_Destination_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[parameters('virtualNetworkGateway_ID')]",
                  "properties": {}
                },
                "localNetworkGateway2": {
                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]",
                  "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[parameters('vpn_SharedKey')]",
                "enableBgp": true,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]"
              ]
            },
            {
              "type": "Microsoft.Network/localNetworkGateways",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag'))]",
              "location": "[parameters('location')]",
              "properties": {
                "gatewayIpAddress": "[parameters('vpn_Destination_PublicIPAddress')]",
                "fqdn": "[parameters('vpn_Destination_FQDN')]",
                "bgpSettings": {
                  "asn": "[parameters('vpn_Destination_ASN')]",
                  "bgpPeeringAddress": "[parameters('vpn_Destination_BGPIPAddress')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway')]"
      ]
    }
  ]
}
