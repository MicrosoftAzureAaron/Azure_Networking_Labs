{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "15964627267733801809"
    }
  },
  "parameters": {
    "locationA": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Datacenter location for the Hub and Spoke A resources"
      }
    },
    "locationB": {
      "type": "string",
      "defaultValue": "[parameters('locationA')]",
      "metadata": {
        "description": "Azure Datacenter location for the Spoke B resources.  \r\nUse the same region as locationA if you do not want to test multi-region\r\n"
      }
    },
    "locationOnPrem": {
      "type": "string",
      "defaultValue": "[parameters('locationA')]",
      "metadata": {
        "description": "Azure Datacenter location for the \"OnPrem\" resources"
      }
    },
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_Size": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "Password for the Virtual Machine Admin User"
      }
    },
    "virtualMachine_ScriptFileLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/Main/scripts/"
    },
    "acceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True enables Accelerated Networking and False disabled it.  \r\nNot all VM sizes support Accel Net (i.e. Standard_B2ms).  \r\nI'd recommend Standard_D2s_v3 for a cheap VM that supports Accel Net.\r\n"
      }
    },
    "storageAccount_Name": {
      "type": "string",
      "defaultValue": "[format('storagepl{0}', uniqueString(resourceGroup().id))]",
      "maxLength": 24,
      "minLength": 3,
      "metadata": {
        "description": "Storage account name restrictions:\r\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\r\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\r\n"
      }
    },
    "usingAzureFirewall": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set this to true if you want to use an Azure Firewall in the Hub Virtual Network."
      }
    },
    "vpn_SharedKey": {
      "type": "securestring",
      "metadata": {
        "description": "VPN Shared Key used for authenticating VPN connections"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubVNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "firstTwoOctetsOfVirtualNetworkPrefix": {
            "value": "10.0"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetwork_Name": {
            "value": "vnet_hub"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "488554783946033402"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/16', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Virtual Network"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "firstTwoOctetsOfVirtualNetworkPrefix": {
              "type": "string",
              "metadata": {
                "description": "First two octects of the Virtual Network address prefix\r\nExample: for a network address of '10.0.0.0/16' you would enter '10.0' here"
              }
            },
            "subnet_General_Name": {
              "type": "string",
              "defaultValue": "General",
              "metadata": {
                "description": "Name of the General Subnet for any other resources"
              }
            },
            "subnet_General_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the General Subnet"
              }
            },
            "subnet_PrivateEndpoints_Name": {
              "type": "string",
              "defaultValue": "PrivateEndpoints",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateEndpoints_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.1.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_Name": {
              "type": "string",
              "defaultValue": "PrivateLinkService",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.2.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_Name": {
              "type": "string",
              "defaultValue": "ApplicationGatewaySubnet",
              "metadata": {
                "description": "Name of the ApplicationGateway Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.3.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the ApplicationGateway Subnet"
              }
            },
            "subnet_AppServiceSubnet_Name": {
              "type": "string",
              "defaultValue": "AppServiceSubnet",
              "metadata": {
                "description": "Name of the AppService Subnet"
              }
            },
            "subnet_AppServiceSubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.4.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the AppService Subnet"
              }
            },
            "subnet_Gateway_Name": {
              "type": "string",
              "defaultValue": "GatewaySubnet",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway Subnet"
              }
            },
            "subnet_Gateway_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.5.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Virtual Network Gateway Subnet"
              }
            },
            "subnet_azureFirewall_Name": {
              "type": "string",
              "defaultValue": "AzureFirewallSubnet",
              "metadata": {
                "description": "Name of the Azure Firewall Subnet"
              }
            },
            "subnet_azureFirewall_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.6.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Firewall Subnet"
              }
            },
            "subnet_azureFirewall_Management_Name": {
              "type": "string",
              "defaultValue": "AzureFirewallManagementSubnet",
              "metadata": {
                "description": "Name of the Azure Firewall Management Subnet"
              }
            },
            "subnet_azureFirewall_Management_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.7.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Firewall Management Subnet"
              }
            },
            "subnet_Bastion_Name": {
              "type": "string",
              "defaultValue": "AzureBastionSubnet",
              "metadata": {
                "description": "Name of the Azure Bastion Subnet"
              }
            },
            "subnet_Bastion_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.8.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Inbound_Name": {
              "type": "string",
              "defaultValue": "PrivateResolver_Inbound",
              "metadata": {
                "description": "Name of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Inbound_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.9.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Outbound_Name": {
              "type": "string",
              "defaultValue": "PrivateResolver_Outbound",
              "metadata": {
                "description": "Name of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Outbound_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.10.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Bastion Subnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnet_General_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_General_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateEndpoints_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateEndpoints_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateLinkService_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateLinkService_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_ApplicationGatewaySubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_ApplicationGatewaySubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_AppServiceSubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_AppServiceSubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_Gateway_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_Gateway_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_azureFirewall_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_azureFirewall_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_azureFirewall_Management_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_azureFirewall_Management_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_Bastion_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_Bastion_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateResolver_Inbound_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateResolver_Inbound_AddressPrefix')]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateResolver_Outbound_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateResolver_Outbound_AddressPrefix')]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')), 'AllowGatewayManager')]",
              "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "65200-65535",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
              ]
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "applicationGateway_PrivateIP": {
              "type": "string",
              "value": "[format('{0}.3.254', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeAVNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "firstTwoOctetsOfVirtualNetworkPrefix": {
            "value": "10.1"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetwork_Name": {
            "value": "vnet_SpokeA"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "10392861313206181093"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/16', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Virtual Network"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "firstTwoOctetsOfVirtualNetworkPrefix": {
              "type": "string",
              "metadata": {
                "description": "First two octects of the Virtual Network address prefix\r\nExample: for a network address of '10.0.0.0/16' you would enter '10.0' here"
              }
            },
            "subnet_General_Name": {
              "type": "string",
              "defaultValue": "General",
              "metadata": {
                "description": "Name of the General Subnet for any other resources"
              }
            },
            "subnet_General_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the General Subnet"
              }
            },
            "subnet_PrivateEndpoints_Name": {
              "type": "string",
              "defaultValue": "PrivateEndpoints",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateEndpoints_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.1.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_Name": {
              "type": "string",
              "defaultValue": "PrivateLinkService",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.2.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_Name": {
              "type": "string",
              "defaultValue": "ApplicationGatewaySubnet",
              "metadata": {
                "description": "Name of the ApplicationGateway Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.3.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the ApplicationGateway Subnet"
              }
            },
            "subnet_AppServiceSubnet_Name": {
              "type": "string",
              "defaultValue": "AppServiceSubnet",
              "metadata": {
                "description": "Name of the AppService Subnet"
              }
            },
            "subnet_AppServiceSubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.4.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the AppService Subnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnet_General_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_General_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateEndpoints_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateEndpoints_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateLinkService_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateLinkService_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_ApplicationGatewaySubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_ApplicationGatewaySubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_AppServiceSubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_AppServiceSubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')), 'AllowGatewayManager')]",
              "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "65200-65535",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
              ]
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "applicationGateway_PrivateIP": {
              "type": "string",
              "value": "[format('{0}.3.254', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubToSpokeAPeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_Source_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          },
          "virtualNetwork_Destination_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeAVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "3947245623130731918"
            }
          },
          "parameters": {
            "virtualNetwork_Source_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Source Virtual Network"
              }
            },
            "virtualNetwork_Destination_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Destination Virtual Network"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Source_Name'), format('{0}to{1}', parameters('virtualNetwork_Source_Name'), parameters('virtualNetwork_Destination_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Destination_Name'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Destination_Name'), format('{0}to{1}', parameters('virtualNetwork_Destination_Name'), parameters('virtualNetwork_Source_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Source_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeAVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeBVNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "firstTwoOctetsOfVirtualNetworkPrefix": {
            "value": "10.2"
          },
          "location": {
            "value": "[parameters('locationB')]"
          },
          "virtualNetwork_Name": {
            "value": "VNet_SpokeB"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "10392861313206181093"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/16', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Virtual Network"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "firstTwoOctetsOfVirtualNetworkPrefix": {
              "type": "string",
              "metadata": {
                "description": "First two octects of the Virtual Network address prefix\r\nExample: for a network address of '10.0.0.0/16' you would enter '10.0' here"
              }
            },
            "subnet_General_Name": {
              "type": "string",
              "defaultValue": "General",
              "metadata": {
                "description": "Name of the General Subnet for any other resources"
              }
            },
            "subnet_General_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the General Subnet"
              }
            },
            "subnet_PrivateEndpoints_Name": {
              "type": "string",
              "defaultValue": "PrivateEndpoints",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateEndpoints_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.1.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_Name": {
              "type": "string",
              "defaultValue": "PrivateLinkService",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.2.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_Name": {
              "type": "string",
              "defaultValue": "ApplicationGatewaySubnet",
              "metadata": {
                "description": "Name of the ApplicationGateway Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.3.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the ApplicationGateway Subnet"
              }
            },
            "subnet_AppServiceSubnet_Name": {
              "type": "string",
              "defaultValue": "AppServiceSubnet",
              "metadata": {
                "description": "Name of the AppService Subnet"
              }
            },
            "subnet_AppServiceSubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.4.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the AppService Subnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnet_General_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_General_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateEndpoints_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateEndpoints_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateLinkService_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateLinkService_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_ApplicationGatewaySubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_ApplicationGatewaySubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_AppServiceSubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_AppServiceSubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')), 'AllowGatewayManager')]",
              "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "65200-65535",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
              ]
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "applicationGateway_PrivateIP": {
              "type": "string",
              "value": "[format('{0}.3.254', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubToSpokeBPeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_Source_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          },
          "virtualNetwork_Destination_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "3947245623130731918"
            }
          },
          "parameters": {
            "virtualNetwork_Source_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Source Virtual Network"
              }
            },
            "virtualNetwork_Destination_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Destination Virtual Network"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Source_Name'), format('{0}to{1}', parameters('virtualNetwork_Source_Name'), parameters('virtualNetwork_Destination_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Destination_Name'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork_Destination_Name'), format('{0}to{1}', parameters('virtualNetwork_Destination_Name'), parameters('virtualNetwork_Source_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Source_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeBVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubVM_Windows",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "hubVM-Windows"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[parameters('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_General_InitScript"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "8596784137539762860"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Machine"
              },
              "maxLength": 15
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "defaultValue": "https://mainjamesgstorage.blob.core.windows.net/scripts/",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "defaultValue": "InitScript.ps1",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: InitScript.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "defaultValue": "[format('powershell -ExecutionPolicy Unrestricted -File {0}', parameters('virtualMachine_ScriptFileName'))]",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell -ExecutionPolicy Unrestricted -File ${virtualMachine_ScriptFileName}'\r\n"
              }
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "install software for Windows virtualMachine"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.18.4.5664",
                      "templateHash": "10775271075142205483"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[parameters('networkInterface_Name')]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeAVM_Windows",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeAVNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "spokeA-WinVM"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[parameters('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_General_InitScript.ps1"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "8596784137539762860"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Machine"
              },
              "maxLength": 15
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "defaultValue": "https://mainjamesgstorage.blob.core.windows.net/scripts/",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "defaultValue": "InitScript.ps1",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: InitScript.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "defaultValue": "[format('powershell -ExecutionPolicy Unrestricted -File {0}', parameters('virtualMachine_ScriptFileName'))]",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell -ExecutionPolicy Unrestricted -File ${virtualMachine_ScriptFileName}'\r\n"
              }
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "install software for Windows virtualMachine"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.18.4.5664",
                      "templateHash": "10775271075142205483"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[parameters('networkInterface_Name')]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'spokeAVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spokeBVM_Windows",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationB')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "spokeB-WinVM"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[parameters('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_WebServer_InitScript.ps1"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "8596784137539762860"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Machine"
              },
              "maxLength": 15
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "defaultValue": "https://mainjamesgstorage.blob.core.windows.net/scripts/",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "defaultValue": "InitScript.ps1",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: InitScript.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "defaultValue": "[format('powershell -ExecutionPolicy Unrestricted -File {0}', parameters('virtualMachine_ScriptFileName'))]",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell -ExecutionPolicy Unrestricted -File ${virtualMachine_ScriptFileName}'\r\n"
              }
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "install software for Windows virtualMachine"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.18.4.5664",
                      "templateHash": "10775271075142205483"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[parameters('networkInterface_Name')]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'spokeBVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "privateLink",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "internalLoadBalancer_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('locationB')]"
          },
          "networkInterface_IPConfig_Names": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVM_Windows'), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            ]
          },
          "networkInterface_Names": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVM_Windows'), '2022-09-01').outputs.networkInterface_Name.value]"
            ]
          },
          "networkInterface_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "privateEndpoint_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.privateEndpoint_SubnetID.value]"
          },
          "privateLink_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.privateLinkService_SubnetID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "4206720600241436975"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "internalLoadBalancer_Name": {
              "type": "string",
              "defaultValue": "internalLoadBalancer",
              "metadata": {
                "description": "Name of the Azure Load Balancer"
              }
            },
            "internalLoadBalancer_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Load Balancer will be deployed to"
              }
            },
            "privateEndpoint_name": {
              "type": "string",
              "defaultValue": "pe_to_pl",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Endpoint will be deployed to"
              }
            },
            "privateLink_Name": {
              "type": "string",
              "defaultValue": "pl",
              "metadata": {
                "description": "Name of the Private Link Service"
              }
            },
            "privateLink_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Link Service will be deployed to"
              }
            },
            "networkInterface_Names": {
              "type": "array",
              "metadata": {
                "description": "Name of the NIC of the Virtual Machine that will be put behind the Private Link Service and Load Balancer"
              }
            },
            "networkInterface_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID of the NIC of the Virtual Machine that will be put behind the Private Link Service and Load Balancer"
              }
            },
            "networkInterface_IPConfig_Names": {
              "type": "array",
              "metadata": {
                "description": "Name of the ipconfig of the NIC of the Virtual Machine that will be put behind the Private Link Service and Load Balancer"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
              }
            },
            "tcpPort": {
              "type": "int",
              "defaultValue": 443,
              "metadata": {
                "description": "TCP Port that will be used for connecting to the Virtual Machine behind the Private Link Service and Load Balancer"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "networkInterface",
                "count": "[length(range(0, length(parameters('networkInterface_Names'))))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}', parameters('networkInterface_Names')[range(0, length(parameters('networkInterface_Names')))[copyIndex()]])]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[format('{0}', parameters('networkInterface_IPConfig_Names')[range(0, length(parameters('networkInterface_Names')))[copyIndex()]])]",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('networkInterface_SubnetID')]"
                      },
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[reference(resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name')), '2022-09-01').backendAddressPools[0].id]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2022-09-01",
              "name": "[parameters('internalLoadBalancer_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "fip",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('internalLoadBalancer_SubnetID')]"
                      },
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "bep"
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "forwardAll",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('internalLoadBalancer_Name'), 'fip')]"
                      },
                      "frontendPort": 0,
                      "backendPort": 0,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 4,
                      "protocol": "All",
                      "enableTcpReset": false,
                      "loadDistribution": "Default",
                      "disableOutboundSnat": true,
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('internalLoadBalancer_Name'), 'bep')]"
                      },
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('internalLoadBalancer_Name'), format('probe{0}', parameters('tcpPort')))]"
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "[format('probe{0}', parameters('tcpPort'))]",
                    "properties": {
                      "protocol": "Tcp",
                      "port": "[parameters('tcpPort')]",
                      "intervalInSeconds": 5,
                      "numberOfProbes": 1,
                      "probeThreshold": 1
                    }
                  }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-09-01",
              "name": "[parameters('privateEndpoint_name')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('privateEndpoint_name')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLink_Name'))]"
                    }
                  }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[format('{0}-nic', parameters('privateEndpoint_name'))]",
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateLinkServices', parameters('privateLink_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateLinkServices",
              "apiVersion": "2022-09-01",
              "name": "[parameters('privateLink_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "enableProxyProtocol": false,
                "loadBalancerFrontendIpConfigurations": [
                  {
                    "id": "[format('{0}/frontendIPConfigurations/fip', resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name')))]"
                  }
                ],
                "ipConfigurations": [
                  {
                    "name": "default-1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('privateLink_SubnetID')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name'))]"
              ]
            }
          ],
          "outputs": {
            "internalLoadBalancer_FrontendIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer_Name')), '2022-09-01').frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "privateEndpoint_NetworkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_name')), '2022-09-01').customNetworkInterfaceName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'spokeBVM_Windows')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeBVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccount",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationB')]"
          },
          "privateEndpoints_File_Name": {
            "value": "[format('{0}_file_pe', parameters('storageAccount_Name'))]"
          },
          "privateEndpoints_Blob_Name": {
            "value": "[format('{0}_blob_pe', parameters('storageAccount_Name'))]"
          },
          "storageAccount_Name": {
            "value": "[parameters('storageAccount_Name')]"
          },
          "privateEndpoint_SubnetID": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeAVNet'), '2022-09-01').outputs.privateEndpoint_SubnetID.value]"
            ]
          },
          "privateDNSZoneLinkedVnetIDList": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.virtualNetwork_ID.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeAVNet'), '2022-09-01').outputs.virtualNetwork_ID.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.virtualNetwork_ID.value]"
            ]
          },
          "privateDNSZoneLinkedVnetNamesList": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeAVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeBVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
            ]
          },
          "privateEndpoint_VirtualNetwork_Name": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'spokeAVNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5651012902893304007"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "privateEndpoint_VirtualNetwork_Name": {
              "type": "array",
              "metadata": {
                "description": "Name of the Virtual Network that the Private Endpoint will be deployed to."
              }
            },
            "privateDNSZoneLinkedVnetNamesList": {
              "type": "array"
            },
            "privateDNSZoneLinkedVnetIDList": {
              "type": "array"
            },
            "privateEndpoint_SubnetID": {
              "type": "array"
            },
            "storageAccount_Name": {
              "type": "string",
              "maxLength": 24,
              "minLength": 3,
              "metadata": {
                "description": "Storage account name restrictions:\r\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\r\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\r\n"
              }
            },
            "usingBlobPrivateEndpoints": {
              "type": "bool",
              "defaultValue": true
            },
            "usingFilePrivateEndpoints": {
              "type": "bool",
              "defaultValue": true
            },
            "privateEndpoints_Blob_Name": {
              "type": "string"
            },
            "privateEndpoints_File_Name": {
              "type": "string"
            }
          },
          "variables": {
            "privateDNSZone_Blob_Name": "privatelink.blob.core.windows.net",
            "privateDNSZone_File_Name": "privatelink.file.core.windows.net"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccount_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccount_Name'), 'default')]",
              "properties": {
                "changeFeed": {
                  "enabled": false
                },
                "restorePolicy": {
                  "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": true,
                  "days": 7
                },
                "isVersioningEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "copy": {
                "name": "privateEndpoints_Blob",
                "count": "[length(range(0, length(parameters('privateEndpoint_SubnetID'))))]"
              },
              "condition": "[parameters('usingBlobPrivateEndpoints')]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}{1}', parameters('privateEndpoints_Blob_Name'), range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()])]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}_in_{1}_to_{2}', parameters('privateEndpoints_Blob_Name'), parameters('privateEndpoint_VirtualNetwork_Name'), parameters('storageAccount_Name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')[range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()]]]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": [
                  {
                    "fqdn": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8)), 1))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "condition": "[parameters('usingBlobPrivateEndpoints')]",
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2018-09-01",
              "name": "[variables('privateDNSZone_Blob_Name')]",
              "location": "global"
            },
            {
              "copy": {
                "name": "privateDNSZone_StorageAccount_Blob_Group",
                "count": "[length(range(0, length(parameters('privateEndpoint_SubnetID'))))]"
              },
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', format('{0}{1}', parameters('privateEndpoints_Blob_Name'), range(0, length(parameters('privateEndpoint_SubnetID')))[range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()]]), 'blobZoneGroup')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_Blob_Name'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_Blob_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}{1}', parameters('privateEndpoints_Blob_Name'), range(0, length(parameters('privateEndpoint_SubnetID')))[range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()]]))]"
              ]
            },
            {
              "copy": {
                "name": "virtualNetworkLink_Blob",
                "count": "[length(range(0, length(parameters('privateDNSZoneLinkedVnetIDList'))))]"
              },
              "condition": "[parameters('usingBlobPrivateEndpoints')]",
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', variables('privateDNSZone_Blob_Name'), format('{0}_to_{1}', variables('privateDNSZone_Blob_Name'), parameters('privateDNSZoneLinkedVnetNamesList')[range(0, length(parameters('privateDNSZoneLinkedVnetIDList')))[copyIndex()]]))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('privateDNSZoneLinkedVnetIDList')[range(0, length(parameters('privateDNSZoneLinkedVnetIDList')))[copyIndex()]]]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_Blob_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccount_Name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccount_Name'), 'default', 'defaultfileshare')]",
              "properties": {
                "accessTier": "Hot",
                "shareQuota": 1024
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccount_Name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "privateEndpoints_File",
                "count": "[length(range(0, length(parameters('privateEndpoint_SubnetID'))))]"
              },
              "condition": "[parameters('usingFilePrivateEndpoints')]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}{1}', parameters('privateEndpoints_File_Name'), range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()])]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}_in_{1}_to_{2}', parameters('privateEndpoints_File_Name'), parameters('privateEndpoint_VirtualNetwork_Name'), parameters('storageAccount_Name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')[range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()]]]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": [
                  {
                    "fqdn": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8)), 1))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDNSZone_File_Name')]",
              "location": "global"
            },
            {
              "copy": {
                "name": "privateDNSZone_StorageAccount_File_Group",
                "count": "[length(range(0, length(parameters('privateEndpoint_SubnetID'))))]"
              },
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', format('{0}{1}', parameters('privateEndpoints_File_Name'), range(0, length(parameters('privateEndpoint_SubnetID')))[range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()]]), 'fileZoneGroup')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_File_Name'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_File_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}{1}', parameters('privateEndpoints_File_Name'), range(0, length(parameters('privateEndpoint_SubnetID')))[range(0, length(parameters('privateEndpoint_SubnetID')))[copyIndex()]]))]"
              ]
            },
            {
              "copy": {
                "name": "virtualNetworkLink_File",
                "count": "[length(range(0, length(parameters('privateDNSZoneLinkedVnetIDList'))))]"
              },
              "condition": "[parameters('usingFilePrivateEndpoints')]",
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', variables('privateDNSZone_File_Name'), format('{0}_to_{1}', variables('privateDNSZone_File_Name'), parameters('privateDNSZoneLinkedVnetNamesList')[range(0, length(parameters('privateDNSZoneLinkedVnetIDList')))[copyIndex()]]))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('privateDNSZoneLinkedVnetIDList')[range(0, length(parameters('privateDNSZoneLinkedVnetIDList')))[copyIndex()]]]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_File_Name'))]"
              ]
            }
          ],
          "outputs": {
            "storageaccount_Blob_FQDN": {
              "type": "string",
              "value": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8)), 1))]"
            },
            "storageaccount_File_FQDN": {
              "type": "string",
              "value": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8)), 1))]"
            },
            "storageAccount_Name": {
              "type": "string",
              "value": "[parameters('storageAccount_Name')]"
            },
            "storageAccountFileShare_Name": {
              "type": "string",
              "value": "defaultfileshare"
            },
            "storageAccount_key0": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').keys[0].value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVM_Windows')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeAVM_Windows')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeBVM_Windows')]",
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeAVNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'spokeBVNet')]"
      ]
    },
    {
      "condition": "[parameters('usingAzureFirewall')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubAzureFirewall",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "azureFirewall_ManagementSubnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.azureFirewallManagement_SubnetID.value]"
          },
          "azureFirewall_Name": {
            "value": "hubAzFW"
          },
          "azureFirewall_SKU": {
            "value": "Basic"
          },
          "azureFirewall_Subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.azureFirewall_SubnetID.value]"
          },
          "azureFirewallPolicy_Name": {
            "value": "hubAzFW_Policy"
          },
          "location": {
            "value": "[parameters('locationA')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "4283712892023480457"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "azureFirewall_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Firewall within the vHub A"
              }
            },
            "azureFirewall_SKU": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
              }
            },
            "azureFirewallPolicy_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Firewall Policy"
              }
            },
            "azureFirewall_Subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Firewall Subnet.  Note: The subnet name must be \"AzureFirewallSubnet"
              }
            },
            "azureFirewall_ManagementSubnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Firewall Management Subnet.  Note: The subnet name must be \"AzureFirewallManagementSubnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP', parameters('azureFirewall_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_Management_PIP', parameters('azureFirewall_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2022-07-01",
              "name": "[parameters('azureFirewallPolicy_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "tier": "[parameters('azureFirewall_SKU')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2022-11-01",
              "name": "[parameters('azureFirewall_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "AZFW_VNet",
                  "tier": "[parameters('azureFirewall_SKU')]"
                },
                "additionalProperties": {},
                "managementIpConfiguration": {
                  "name": "managementipconfig",
                  "properties": {
                    "publicIPAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]"
                    },
                    "subnet": {
                      "id": "[parameters('azureFirewall_ManagementSubnet_ID')]"
                    }
                  }
                },
                "ipConfigurations": [
                  {
                    "name": "ipconfiguration",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('azureFirewall_Subnet_ID')]"
                      }
                    }
                  }
                ],
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('azureFirewallPolicy_Name'), 'DefaultNetworkRuleCollectionGroup')]",
              "properties": {
                "priority": 200,
                "ruleCollections": [
                  {
                    "name": "allowall",
                    "priority": 100,
                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                    "action": {
                      "type": "Allow"
                    },
                    "rules": [
                      {
                        "ruleType": "NetworkRule",
                        "name": "any",
                        "ipProtocols": [
                          "any"
                        ],
                        "sourceAddresses": [
                          "*"
                        ],
                        "destinationAddresses": [
                          "*"
                        ],
                        "destinationPorts": [
                          "*"
                        ]
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
              ]
            }
          ],
          "outputs": {
            "azureFirewall_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall_Name')), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubBastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastion_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.bastion_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('locationA')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "16807152716578717234"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "bastion_name": {
              "type": "string",
              "defaultValue": "bastion",
              "metadata": {
                "description": "Name of the Azure Bastion"
              }
            },
            "bastion_vip_name": {
              "type": "string",
              "defaultValue": "bastion_vip",
              "metadata": {
                "description": "Name of the Public IP Address attached to the Azure Bastion"
              }
            },
            "bastion_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
              }
            },
            "bastion_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard"
              ],
              "metadata": {
                "description": "SKU of the Azure Bastion"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('bastion_name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('bastion_SKU')]"
              },
              "properties": {
                "scaleUnits": 2,
                "enableTunneling": false,
                "enableIpConnect": false,
                "disableCopyPaste": false,
                "enableShareableLink": false,
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastion_vip_name'))]"
                      },
                      "subnet": {
                        "id": "[parameters('bastion_SubnetID')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastion_vip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[parameters('bastion_vip_name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPremVNET",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "firstTwoOctetsOfVirtualNetworkPrefix": {
            "value": "10.100"
          },
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetwork_Name": {
            "value": "vnet_OnPrem"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "488554783946033402"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/16', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Virtual Network"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "firstTwoOctetsOfVirtualNetworkPrefix": {
              "type": "string",
              "metadata": {
                "description": "First two octects of the Virtual Network address prefix\r\nExample: for a network address of '10.0.0.0/16' you would enter '10.0' here"
              }
            },
            "subnet_General_Name": {
              "type": "string",
              "defaultValue": "General",
              "metadata": {
                "description": "Name of the General Subnet for any other resources"
              }
            },
            "subnet_General_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.0.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the General Subnet"
              }
            },
            "subnet_PrivateEndpoints_Name": {
              "type": "string",
              "defaultValue": "PrivateEndpoints",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateEndpoints_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.1.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_Name": {
              "type": "string",
              "defaultValue": "PrivateLinkService",
              "metadata": {
                "description": "Name of the PrivateEndpoint Subnet"
              }
            },
            "subnet_PrivateLinkService_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.2.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the PrivateEndpoint Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_Name": {
              "type": "string",
              "defaultValue": "ApplicationGatewaySubnet",
              "metadata": {
                "description": "Name of the ApplicationGateway Subnet"
              }
            },
            "subnet_ApplicationGatewaySubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.3.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the ApplicationGateway Subnet"
              }
            },
            "subnet_AppServiceSubnet_Name": {
              "type": "string",
              "defaultValue": "AppServiceSubnet",
              "metadata": {
                "description": "Name of the AppService Subnet"
              }
            },
            "subnet_AppServiceSubnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.4.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the AppService Subnet"
              }
            },
            "subnet_Gateway_Name": {
              "type": "string",
              "defaultValue": "GatewaySubnet",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway Subnet"
              }
            },
            "subnet_Gateway_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.5.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Virtual Network Gateway Subnet"
              }
            },
            "subnet_azureFirewall_Name": {
              "type": "string",
              "defaultValue": "AzureFirewallSubnet",
              "metadata": {
                "description": "Name of the Azure Firewall Subnet"
              }
            },
            "subnet_azureFirewall_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.6.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Firewall Subnet"
              }
            },
            "subnet_azureFirewall_Management_Name": {
              "type": "string",
              "defaultValue": "AzureFirewallManagementSubnet",
              "metadata": {
                "description": "Name of the Azure Firewall Management Subnet"
              }
            },
            "subnet_azureFirewall_Management_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.7.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Firewall Management Subnet"
              }
            },
            "subnet_Bastion_Name": {
              "type": "string",
              "defaultValue": "AzureBastionSubnet",
              "metadata": {
                "description": "Name of the Azure Bastion Subnet"
              }
            },
            "subnet_Bastion_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.8.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Inbound_Name": {
              "type": "string",
              "defaultValue": "PrivateResolver_Inbound",
              "metadata": {
                "description": "Name of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Inbound_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.9.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Outbound_Name": {
              "type": "string",
              "defaultValue": "PrivateResolver_Outbound",
              "metadata": {
                "description": "Name of the Azure Bastion Subnet"
              }
            },
            "subnet_PrivateResolver_Outbound_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('{0}.10.0/24', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]",
              "metadata": {
                "description": "Address Prefix of the Azure Bastion Subnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnet_General_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_General_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateEndpoints_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateEndpoints_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateLinkService_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateLinkService_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_ApplicationGatewaySubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_ApplicationGatewaySubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_AppServiceSubnet_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_AppServiceSubnet_AddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_Gateway_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_Gateway_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_azureFirewall_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_azureFirewall_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_azureFirewall_Management_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_azureFirewall_Management_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_Bastion_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_Bastion_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateResolver_Inbound_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateResolver_Inbound_AddressPrefix')]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[parameters('subnet_PrivateResolver_Outbound_Name')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnet_PrivateResolver_Outbound_AddressPrefix')]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')), 'AllowGatewayManager')]",
              "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "65200-65535",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_networkSecurityGroup_ApplicationGateway', parameters('virtualNetwork_Name')))]"
              ]
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "applicationGateway_PrivateIP": {
              "type": "string",
              "value": "[format('{0}.3.254', parameters('firstTwoOctetsOfVirtualNetworkPrefix'))]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            }
          }
        }
      }
    },
    {
      "copy": {
        "name": "OnPremVM_WinDNS",
        "count": "[length(range(1, 2))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('OnPremWinDNS{0}', range(1, 2)[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVNET'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "[format('OnPremWinDNS{0}', range(1, 2)[copyIndex()])]"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[parameters('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_DNS_InitScript.ps1"
          },
          "commandToExecute": {
            "value": "powershell -ExecutionPolicy Unrestricted -File WinServ2022_DNS_InitScript.ps1 -SampleDNSZoneName \"test.com\" -SampleHostName \"a\" -SampleARecord \"172.16.0.1\""
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "8596784137539762860"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Machine"
              },
              "maxLength": 15
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "defaultValue": "https://mainjamesgstorage.blob.core.windows.net/scripts/",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "defaultValue": "InitScript.ps1",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: InitScript.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "defaultValue": "[format('powershell -ExecutionPolicy Unrestricted -File {0}', parameters('virtualMachine_ScriptFileName'))]",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell -ExecutionPolicy Unrestricted -File ${virtualMachine_ScriptFileName}'\r\n"
              }
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "install software for Windows virtualMachine"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.18.4.5664",
                      "templateHash": "10775271075142205483"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[parameters('networkInterface_Name')]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'OnPremVNET')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPremVirtualNetworkGateway",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetworkGateway_ASN": {
            "value": 65000
          },
          "virtualNetworkGateway_Name": {
            "value": "OnPremVNG"
          },
          "virtualNetworkGateway_Subnet_ResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVNET'), '2022-09-01').outputs.gateway_SubnetID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5892776891067736618"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resources are deployed to"
              }
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway"
              }
            },
            "virtualNetworkGateway_SKU": {
              "type": "string",
              "defaultValue": "VpnGw1",
              "metadata": {
                "description": "SKU of the Virtual Network Gateway"
              }
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "metadata": {
                "description": "Virtul Network Gateway ASN for BGP"
              }
            },
            "virtualNetworkGateway_Subnet_ResourceID": {
              "type": "string",
              "metadata": {
                "description": "Virtual Network Resource ID"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP', parameters('virtualNetworkGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2023-02-01",
              "name": "[parameters('virtualNetworkGateway_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                  {
                    "name": "default",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('virtualNetworkGateway_Name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('virtualNetworkGateway_Subnet_ResourceID')]"
                      }
                    }
                  }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                  "name": "[parameters('virtualNetworkGateway_SKU')]",
                  "tier": "[parameters('virtualNetworkGateway_SKU')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": false,
                "bgpSettings": {
                  "asn": "[parameters('virtualNetworkGateway_ASN')]",
                  "peerWeight": 0
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('virtualNetworkGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkGateway_ResourceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "value": "[parameters('virtualNetworkGateway_Name')]"
            },
            "virtualNetworkGateway_PublicIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
            },
            "virtualNetworkGateway_BGPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'OnPremVNET')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPrem_to_Hub_conn",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetworkGateway_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
          },
          "vpn_Destination_ASN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
          },
          "vpn_Destination_BGPIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
          },
          "vpn_Destination_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
          },
          "vpn_Destination_PublicIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "4104203714567954468"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter to which the resources will be deployed"
              }
            },
            "vpn_Destination_Name": {
              "type": "string",
              "metadata": {
                "description": "Friendly name for the destination VPN device"
              }
            },
            "vpn_Destination_PublicIPAddress": {
              "type": "string",
              "metadata": {
                "description": "Public IP Address of the Destination VPN"
              }
            },
            "vpn_Destination_BGPIPAddress": {
              "type": "string",
              "metadata": {
                "description": "BGP Peering Address of the Destination VPN"
              }
            },
            "vpn_Destination_ASN": {
              "type": "int",
              "metadata": {
                "description": "ASN of the Destination VPN"
              }
            },
            "vpn_SharedKey": {
              "type": "securestring",
              "metadata": {
                "description": "VPN Shared Key used for authenticating VPN connections"
              }
            },
            "virtualNetworkGateway_ID": {
              "type": "string",
              "metadata": {
                "description": "Existing Virtual Network Gateway ID"
              }
            }
          },
          "variables": {
            "virtualNetworkGateway_ID_Split": "[split(parameters('virtualNetworkGateway_ID'), '/')]",
            "virtualNetworkGateway_Name": "[variables('virtualNetworkGateway_ID_Split')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/connections",
              "apiVersion": "2022-11-01",
              "name": "[format('Connection_for_{0}_to_{1}', variables('virtualNetworkGateway_Name'), parameters('vpn_Destination_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[parameters('virtualNetworkGateway_ID')]",
                  "properties": {}
                },
                "localNetworkGateway2": {
                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('localNetworkGateway_for_{0}', parameters('vpn_Destination_Name')))]",
                  "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[parameters('vpn_SharedKey')]",
                "enableBgp": true,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', format('localNetworkGateway_for_{0}', parameters('vpn_Destination_Name')))]"
              ]
            },
            {
              "type": "Microsoft.Network/localNetworkGateways",
              "apiVersion": "2022-11-01",
              "name": "[format('localNetworkGateway_for_{0}', parameters('vpn_Destination_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "gatewayIpAddress": "[parameters('vpn_Destination_PublicIPAddress')]",
                "bgpSettings": {
                  "asn": "[parameters('vpn_Destination_ASN')]",
                  "bgpPeeringAddress": "[parameters('vpn_Destination_BGPIPAddress')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "HubVirtualNetworkGateway",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationA')]"
          },
          "virtualNetworkGateway_ASN": {
            "value": 65001
          },
          "virtualNetworkGateway_Name": {
            "value": "HubVNG"
          },
          "virtualNetworkGateway_Subnet_ResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubVNet'), '2022-09-01').outputs.gateway_SubnetID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5892776891067736618"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resources are deployed to"
              }
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway"
              }
            },
            "virtualNetworkGateway_SKU": {
              "type": "string",
              "defaultValue": "VpnGw1",
              "metadata": {
                "description": "SKU of the Virtual Network Gateway"
              }
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "metadata": {
                "description": "Virtul Network Gateway ASN for BGP"
              }
            },
            "virtualNetworkGateway_Subnet_ResourceID": {
              "type": "string",
              "metadata": {
                "description": "Virtual Network Resource ID"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP', parameters('virtualNetworkGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2023-02-01",
              "name": "[parameters('virtualNetworkGateway_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                  {
                    "name": "default",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('virtualNetworkGateway_Name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('virtualNetworkGateway_Subnet_ResourceID')]"
                      }
                    }
                  }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                  "name": "[parameters('virtualNetworkGateway_SKU')]",
                  "tier": "[parameters('virtualNetworkGateway_SKU')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": false,
                "bgpSettings": {
                  "asn": "[parameters('virtualNetworkGateway_ASN')]",
                  "peerWeight": 0
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('virtualNetworkGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkGateway_ResourceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "value": "[parameters('virtualNetworkGateway_Name')]"
            },
            "virtualNetworkGateway_PublicIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
            },
            "virtualNetworkGateway_BGPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'hubVNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Hub_to_OnPrem_conn",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationOnPrem')]"
          },
          "virtualNetworkGateway_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
          },
          "vpn_Destination_ASN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
          },
          "vpn_Destination_BGPIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
          },
          "vpn_Destination_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
          },
          "vpn_Destination_PublicIPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "4104203714567954468"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter to which the resources will be deployed"
              }
            },
            "vpn_Destination_Name": {
              "type": "string",
              "metadata": {
                "description": "Friendly name for the destination VPN device"
              }
            },
            "vpn_Destination_PublicIPAddress": {
              "type": "string",
              "metadata": {
                "description": "Public IP Address of the Destination VPN"
              }
            },
            "vpn_Destination_BGPIPAddress": {
              "type": "string",
              "metadata": {
                "description": "BGP Peering Address of the Destination VPN"
              }
            },
            "vpn_Destination_ASN": {
              "type": "int",
              "metadata": {
                "description": "ASN of the Destination VPN"
              }
            },
            "vpn_SharedKey": {
              "type": "securestring",
              "metadata": {
                "description": "VPN Shared Key used for authenticating VPN connections"
              }
            },
            "virtualNetworkGateway_ID": {
              "type": "string",
              "metadata": {
                "description": "Existing Virtual Network Gateway ID"
              }
            }
          },
          "variables": {
            "virtualNetworkGateway_ID_Split": "[split(parameters('virtualNetworkGateway_ID'), '/')]",
            "virtualNetworkGateway_Name": "[variables('virtualNetworkGateway_ID_Split')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/connections",
              "apiVersion": "2022-11-01",
              "name": "[format('Connection_for_{0}_to_{1}', variables('virtualNetworkGateway_Name'), parameters('vpn_Destination_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[parameters('virtualNetworkGateway_ID')]",
                  "properties": {}
                },
                "localNetworkGateway2": {
                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('localNetworkGateway_for_{0}', parameters('vpn_Destination_Name')))]",
                  "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[parameters('vpn_SharedKey')]",
                "enableBgp": true,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', format('localNetworkGateway_for_{0}', parameters('vpn_Destination_Name')))]"
              ]
            },
            {
              "type": "Microsoft.Network/localNetworkGateways",
              "apiVersion": "2022-11-01",
              "name": "[format('localNetworkGateway_for_{0}', parameters('vpn_Destination_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "gatewayIpAddress": "[parameters('vpn_Destination_PublicIPAddress')]",
                "bgpSettings": {
                  "asn": "[parameters('vpn_Destination_ASN')]",
                  "bgpPeeringAddress": "[parameters('vpn_Destination_BGPIPAddress')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubVirtualNetworkGateway')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPremVirtualNetworkGateway')]"
      ]
    }
  ]
}