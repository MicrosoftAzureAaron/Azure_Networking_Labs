{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "10906973477323959421"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Datacenter location for all resources"
      }
    },
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_Size": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "Size of the Virtual Machines"
      }
    },
    "acceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True enables Accelerated Networking and False disabled it.  \r\nNot all VM sizes support Accel Net (i.e. Standard_B2ms).  \r\nI'd recommend Standard_D2s_v3 for a cheap VM that supports Accel Net.\r\n"
      }
    },
    "storageAccount_Name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Storage account name restrictions:\r\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\r\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\r\n"
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {
        "Training": "PrivateResolver_Centralized"
      }
    }
  },
  "variables": {
    "virtualMachine_ScriptFileLocation": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Hub_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.0.0.0/16"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetwork_Name": {
            "value": "Hub_VNet"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "13620256258335063275"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\r\nExample:\r\n[10.0.0.4, 10.0.0.5]\r\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Spoke_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.1.0.0/16"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetwork_Name": {
            "value": "Spoke_VNet"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "13620256258335063275"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\r\nExample:\r\n[10.0.0.4, 10.0.0.5]\r\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "HubToSpokePeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork1_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          },
          "virtualNetwork2_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Spoke_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "3336530259397836079"
            }
          },
          "parameters": {
            "virtualNetwork1_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the First Virtual Network"
              }
            },
            "virtualNetwork2_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Second Virtual Network"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork1_Name'), format('{0}to{1}', parameters('virtualNetwork1_Name'), parameters('virtualNetwork2_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork2_Name'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork2_Name'), format('{0}to{1}', parameters('virtualNetwork2_Name'), parameters('virtualNetwork1_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork1_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'Spoke_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "HubToOnPremPeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork1_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          },
          "virtualNetwork2_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "3336530259397836079"
            }
          },
          "parameters": {
            "virtualNetwork1_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the First Virtual Network"
              }
            },
            "virtualNetwork2_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Second Virtual Network"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork1_Name'), format('{0}to{1}', parameters('virtualNetwork1_Name'), parameters('virtualNetwork2_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork2_Name'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('virtualNetwork2_Name'), format('{0}to{1}', parameters('virtualNetwork2_Name'), parameters('virtualNetwork1_Name')))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork1_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Hub-WinClientVM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "Hub-WinClient"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_General.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          },
          "privateIPAddress": {
            "value": "[cidrHost(reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.general_Subnet_AddressPrefix.value, 3)]"
          },
          "privateIPAllocationMethod": {
            "value": "Static"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "16559789963094496200"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\r\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "13708112360299910000"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "spoke-WinClientVM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Spoke_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "Spoke-WinClient"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_General.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          },
          "privateIPAddress": {
            "value": "[cidrHost(reference(resourceId('Microsoft.Resources/deployments', 'Spoke_VNet'), '2022-09-01').outputs.general_Subnet_AddressPrefix.value, 3)]"
          },
          "privateIPAllocationMethod": {
            "value": "Static"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "16559789963094496200"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\r\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "13708112360299910000"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Spoke_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccount",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccount_Name": {
            "value": "[parameters('storageAccount_Name')]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "17098085326163063732"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "storageAccount_Name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 24,
              "metadata": {
                "description": "Storage account name restrictions:\r\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\r\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\r\n"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccount_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccount_Name'), 'default')]",
              "properties": {
                "changeFeed": {
                  "enabled": false
                },
                "restorePolicy": {
                  "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": true,
                  "days": 7
                },
                "isVersioningEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccount_Name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccount_Name'), 'default', 'defaultfileshare')]",
              "properties": {
                "accessTier": "Hot",
                "shareQuota": 1024
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccount_Name'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageaccount_Blob_FQDN": {
              "type": "string",
              "value": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.blob, 7, 8)), 1))]"
            },
            "storageaccount_File_FQDN": {
              "type": "string",
              "value": "[take(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8), sub(length(substring(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').primaryEndpoints.file, 7, 8)), 1))]"
            },
            "storageAccount_Name": {
              "type": "string",
              "value": "[parameters('storageAccount_Name')]"
            },
            "storageAccount_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
            },
            "storageAccount_BlobServices_Name": {
              "type": "string",
              "value": "default"
            },
            "storageAccountFileShare_Name": {
              "type": "string",
              "value": "defaultfileshare"
            },
            "storageAccount_key0": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name')), '2023-01-01').keys[0].value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Hub_StorageAccount_Blob_PrivateEndpoint",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "groupID": {
            "value": "blob"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "privateDNSZone_Name": {
            "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
          },
          "privateEndpoint_Name": {
            "value": "[format('Hub_{0}_blob_pe', parameters('storageAccount_Name'))]"
          },
          "privateEndpoint_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.privateEndpoint_SubnetID.value]"
          },
          "privateLinkServiceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.storageAccount_ID.value]"
          },
          "virtualNetwork_IDs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.virtualNetwork_ID.value]"
            ]
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "9746584494865562022"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "privateEndpoint_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "privateLinkServiceId": {
              "type": "string"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Endpoint will be deployed to"
              }
            },
            "virtualNetwork_IDs": {
              "type": "array",
              "metadata": {
                "description": "Resource ID of the Virtual Networks to be linked to the Private DNS Zone"
              }
            },
            "groupID": {
              "type": "string",
              "metadata": {
                "description": "The ID of a group obtained from the remote resource that this private endpoint should connect to."
              }
            },
            "privateDNSZone_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private DNS Zone\r\nExample: privatelink.blob.${environment().suffixes.storage}"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "resource_Name": "[last(split(parameters('privateLinkServiceId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[parameters('privateEndpoint_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}_to_{1}', parameters('privateEndpoint_Name'), variables('resource_Name'))]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                      "groupIds": [
                        "[parameters('groupID')]"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDNSZone_Name')]",
              "location": "global",
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('privateEndpoint_Name'), format('{0}ZoneGroup', parameters('groupID')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name'))]"
              ]
            },
            {
              "copy": {
                "name": "virtualNetworkLink_File",
                "count": "[length(parameters('virtualNetwork_IDs'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', parameters('privateDNSZone_Name'), format('{0}_to_{1}', parameters('privateEndpoint_Name'), last(split(parameters('virtualNetwork_IDs')[copyIndex()], '/'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetwork_IDs')[copyIndex()]]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name'))]"
              ]
            }
          ],
          "outputs": {
            "privateEndpoint_NetworkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name')), '2023-05-01').customNetworkInterfaceName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_VNet')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Hub_Bastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastion_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Hub_VNet'), '2022-09-01').outputs.bastion_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "bastion_name": {
            "value": "Hub_bastion"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "11394564574041274025"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "bastion_name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Bastion"
              }
            },
            "bastion_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
              }
            },
            "bastion_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard"
              ],
              "metadata": {
                "description": "SKU of the Azure Bastion"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('bastion_name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('bastion_SKU')]"
              },
              "properties": {
                "scaleUnits": 2,
                "enableTunneling": false,
                "enableIpConnect": false,
                "disableCopyPaste": false,
                "enableShareableLink": false,
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('bastion_SubnetID')]"
                      }
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('bastion_name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPrem_VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.100.0.0/16"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetwork_Name": {
            "value": "OnPrem_VNet"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "13620256258335063275"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\r\nExample:\r\n[10.0.0.4, 10.0.0.5]\r\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPremWinDNS",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "OnPrem-WinDns"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_General.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          },
          "privateIPAddress": {
            "value": "[cidrHost(reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet'), '2022-09-01').outputs.general_Subnet_AddressPrefix.value, 3)]"
          },
          "privateIPAllocationMethod": {
            "value": "Static"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "16559789963094496200"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\r\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "13708112360299910000"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPrem-WinClientVM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "OnPrem-WinClien"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_General.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          },
          "privateIPAddress": {
            "value": "[cidrHost(reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet'), '2022-09-01').outputs.general_Subnet_AddressPrefix.value, 4)]"
          },
          "privateIPAllocationMethod": {
            "value": "Static"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "16559789963094496200"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\r\nExamples:\r\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\r\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\r\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\r\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\r\nExample:\r\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\r\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "13708112360299910000"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNet')]"
      ]
    }
  ],
  "outputs": {
    "deleteScript": {
      "type": "string",
      "value": "[format('$rgName = {0}; $tag = {1}', resourceGroup().name, parameters('tagValues'))]"
    }
  }
}
