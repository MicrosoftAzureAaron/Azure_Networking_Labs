{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.34.60546",
      "templateHash": "12211550571651090749"
    }
  },
  "parameters": {
    "mainLocation": {
      "type": "string",
      "defaultValue": "eastus2",
      "metadata": {
        "description": "Azure Datacenter location that the main resouces will be deployed to."
      }
    },
    "onPremLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure Datacenter location that the \"OnPrem\" resouces will be deployed to."
      }
    },
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin Username for the Virtual Machines that gets placed in each Virtual Network"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Admin User of the Virtual Machines that gets placed in each Virtual Network"
      }
    },
    "vpn_SharedKey": {
      "type": "securestring",
      "metadata": {
        "description": "VPN Shared Key used for authenticating VPN connections.  This Shared Key must be the same key that is used on the Virtual Network Gateway that is being connected to the vWAN's S2S VPNs."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "virtualWAN",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('mainLocation')]"
          },
          "virtualWAN_Name": {
            "value": "vwan"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.34.60546",
              "templateHash": "4376531118780394039"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that Virtual WAN"
              }
            },
            "virtualWAN_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual WAN resource"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualWans",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualWAN_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableVpnEncryption": false,
                "allowBranchToBranchTraffic": true,
                "type": "Standard"
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "virtualWAN_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualWans', parameters('virtualWAN_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vHubA",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_VirtualHub_AddressPrefix": {
            "value": "10.110.0.0/16"
          },
          "virtualNetwork_AddressPrefixs": {
            "value": [
              "10.111.0.0/16",
              "10.112.0.0/16"
            ]
          },
          "location": {
            "value": "[parameters('mainLocation')]"
          },
          "usingAzureFirewall": {
            "value": true
          },
          "usingVPN": {
            "value": true
          },
          "virtualHub_UniquePrefix": {
            "value": "A"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualWAN_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualWAN'), '2022-09-01').outputs.virtualWAN_ID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.34.60546",
              "templateHash": "3606402406851387324"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualWAN_ID": {
              "type": "string"
            },
            "virtualHub_UniquePrefix": {
              "type": "string"
            },
            "virtualNetwork_VirtualHub_AddressPrefix": {
              "type": "string"
            },
            "virtualNetwork_AddressPrefixs": {
              "type": "array"
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring"
            },
            "virtualMachine_AdminUsername": {
              "type": "string"
            },
            "usingAzureFirewall": {
              "type": "bool"
            },
            "usingVPN": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "vhub",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "virtualHub_AddressPrefix": {
                    "value": "[parameters('virtualNetwork_VirtualHub_AddressPrefix')]"
                  },
                  "virtualHub_Name": {
                    "value": "[format('vhub{0}', parameters('virtualHub_UniquePrefix'))]"
                  },
                  "virtualWAN_ID": {
                    "value": "[parameters('virtualWAN_ID')]"
                  },
                  "usingAzureFirewall": {
                    "value": "[parameters('usingAzureFirewall')]"
                  },
                  "azureFirewall_SKU": {
                    "value": "Basic"
                  },
                  "usingVPN": {
                    "value": "[parameters('usingVPN')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "2218181201673264173"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter location that the main resouces will be deployed to."
                      }
                    },
                    "virtualWAN_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "ID of the existing virtualWAN"
                      }
                    },
                    "virtualHub_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Hub"
                      }
                    },
                    "virtualHub_AddressPrefix": {
                      "type": "string",
                      "metadata": {
                        "description": "Address Prefix of the first Virtual Hub\nExample: 10.0.0.0/16"
                      }
                    },
                    "usingAzureFirewall": {
                      "type": "bool",
                      "metadata": {
                        "description": "Deploys a Azure Firewall to the Virtual Hub if true"
                      }
                    },
                    "azureFirewall_SKU": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "metadata": {
                        "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
                      }
                    },
                    "usingVPN": {
                      "type": "bool",
                      "metadata": {
                        "description": "Deploys a VPN Gateway to the Virtual Hub if true"
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "vpnGateway_Name_Array": [
                      "[format('{0}_vpnGateway', parameters('virtualHub_Name'))]",
                      "[format('{0}_vpnGateway', parameters('virtualHub_Name'))]"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualHubs",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('virtualHub_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "addressPrefix": "[parameters('virtualHub_AddressPrefix')]",
                        "virtualWan": {
                          "id": "[parameters('virtualWAN_ID')]"
                        },
                        "allowBranchToBranchTraffic": false,
                        "hubRoutingPreference": "VpnGateway"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/virtualHubs/hubRouteTables",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('virtualHub_Name'), 'defaultRouteTable')]",
                      "properties": {
                        "routes": [],
                        "labels": [
                          "default"
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHub_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/virtualHubs/hubRouteTables",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('virtualHub_Name'), 'noneRouteTable')]",
                      "properties": {
                        "routes": [],
                        "labels": [
                          "none"
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHub_Name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('usingVPN')]",
                      "type": "Microsoft.Network/vpnGateways",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}_vpnGateway', parameters('virtualHub_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "connections": [],
                        "virtualHub": {
                          "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHub_Name'))]"
                        },
                        "vpnGatewayScaleUnit": 1,
                        "natRules": [],
                        "enableBgpRouteTranslationForNat": false,
                        "isRoutingPreferenceInternet": false
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHub_Name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('usingAzureFirewall')]",
                      "type": "Microsoft.Network/firewallPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}_AzFWPolicy', parameters('virtualHub_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "tier": "[parameters('azureFirewall_SKU')]"
                        }
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('usingAzureFirewall')]",
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}_AzFW', parameters('virtualHub_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "name": "AzFW_Hub",
                          "tier": "[parameters('azureFirewall_SKU')]"
                        },
                        "additionalProperties": {},
                        "virtualHub": {
                          "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHub_Name'))]"
                        },
                        "hubIPAddresses": {
                          "publicIPs": {
                            "count": 1
                          }
                        },
                        "firewallPolicy": {
                          "id": "[resourceId('Microsoft.Network/firewallPolicies', format('{0}_AzFWPolicy', parameters('virtualHub_Name')))]"
                        }
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/firewallPolicies', format('{0}_AzFWPolicy', parameters('virtualHub_Name')))]",
                        "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHub_Name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "virtualHub_Name": {
                      "type": "string",
                      "value": "[parameters('virtualHub_Name')]"
                    },
                    "virtualHub_RouteTable_Default_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('virtualHub_Name'), 'defaultRouteTable')]"
                    },
                    "vpnGateway_Name": {
                      "type": "string",
                      "value": "[format('{0}_vpnGateway', parameters('virtualHub_Name'))]"
                    },
                    "vpnGateway_Name_Array": {
                      "type": "array",
                      "value": "[if(parameters('usingVPN'), variables('vpnGateway_Name_Array'), createArray())]"
                    },
                    "vpnGateway_PublicIPAddresses": {
                      "type": "array",
                      "value": "[if(parameters('usingVPN'), createArray(reference(resourceId('Microsoft.Network/vpnGateways', format('{0}_vpnGateway', parameters('virtualHub_Name'))), '2022-07-01').bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0], reference(resourceId('Microsoft.Network/vpnGateways', format('{0}_vpnGateway', parameters('virtualHub_Name'))), '2022-07-01').bgpSettings.bgpPeeringAddresses[1].tunnelIpAddresses[0]), createArray())]"
                    },
                    "vpnGateway_BGPAddresses": {
                      "type": "array",
                      "value": "[if(parameters('usingVPN'), createArray(reference(resourceId('Microsoft.Network/vpnGateways', format('{0}_vpnGateway', parameters('virtualHub_Name'))), '2022-07-01').bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0], reference(resourceId('Microsoft.Network/vpnGateways', format('{0}_vpnGateway', parameters('virtualHub_Name'))), '2022-07-01').bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0]), createArray())]"
                    },
                    "vpnGateway_ASN": {
                      "type": "array",
                      "value": "[if(parameters('usingVPN'), createArray(reference(resourceId('Microsoft.Network/vpnGateways', format('{0}_vpnGateway', parameters('virtualHub_Name'))), '2022-07-01').bgpSettings.asn, reference(resourceId('Microsoft.Network/vpnGateways', format('{0}_vpnGateway', parameters('virtualHub_Name'))), '2022-07-01').bgpSettings.asn), createArray())]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "virtualNetwork_Spoke",
                "count": "[length(range(0, length(parameters('virtualNetwork_AddressPrefixs'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetwork_AddressPrefix": {
                    "value": "[parameters('virtualNetwork_AddressPrefixs')[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]]]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "virtualNetwork_Name": {
                    "value": "[format('vhub{0}_spoke{1}_VNet', parameters('virtualHub_UniquePrefix'), range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()])]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "10263754388870337008"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "virtualNetwork_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Network"
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
                      }
                    },
                    "networkSecurityGroup_Default_Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
                      "metadata": {
                        "description": "Name of the General Network Security Group"
                      }
                    },
                    "routeTable_Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
                      "metadata": {
                        "description": "Name of the General Route Table"
                      }
                    },
                    "virtualNetwork_AddressPrefix": {
                      "type": "string"
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "copy": [
                      {
                        "name": "subnet_AddressRangeCIDRs",
                        "count": "[length(range(0, 255))]",
                        "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
                      }
                    ],
                    "subnet_Names": [
                      "General",
                      "PrivateEndpoints",
                      "PrivateLinkService",
                      "ApplicationGatewaySubnet",
                      "AppServiceSubnet",
                      "GatewaySubnet",
                      "AzureFirewallSubnet",
                      "AzureFirewallManagementSubnet",
                      "AzureBastionSubnet",
                      "PrivateResolver_Inbound",
                      "PrivateResolver_Outbound"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('virtualNetwork_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "dhcpOptions": {
                          "dnsServers": "[parameters('dnsServers')]"
                        },
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('virtualNetwork_AddressPrefix')]"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "[variables('subnet_Names')[0]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[1]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[2]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Disabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[3]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[4]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "delegations": [
                                {
                                  "name": "delegation",
                                  "properties": {
                                    "serviceName": "Microsoft.Web/serverfarms"
                                  },
                                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                              ],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[5]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[6]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[7]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[8]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[9]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                              "delegations": [
                                {
                                  "name": "Microsoft.Network.dnsResolvers",
                                  "properties": {
                                    "serviceName": "Microsoft.Network/dnsResolvers"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[10]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                              "delegations": [
                                {
                                  "name": "Microsoft.Network.dnsResolvers",
                                  "properties": {
                                    "serviceName": "Microsoft.Network/dnsResolvers"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "enableDdosProtection": false
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                        "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('routeTable_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": false
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkSecurityGroup_Default_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {},
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowGatewayManager",
                            "properties": {
                              "description": "Allow GatewayManager",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "65200-65535",
                              "sourceAddressPrefix": "GatewayManager",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 1000,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "AllowHTTPS",
                            "properties": {
                              "description": "Allow HTTPS",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 1001,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "general_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
                    },
                    "privateEndpoint_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
                    },
                    "privateLinkService_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
                    },
                    "applicationGateway_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
                    },
                    "appService_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
                    },
                    "gateway_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
                    },
                    "azureFirewall_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
                    },
                    "azureFirewallManagement_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
                    },
                    "bastion_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
                    },
                    "privateResolver_Inbound_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
                    },
                    "privateResolver_Outbound_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
                    },
                    "general_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
                    },
                    "privateEndpoint_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
                    },
                    "privateLinkService_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
                    },
                    "applicationGateway_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
                    },
                    "appService_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
                    },
                    "gateway_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
                    },
                    "azureFirewall_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
                    },
                    "azureFirewallManagement_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
                    },
                    "bastion_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
                    },
                    "privateResolver_Inbound_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
                    },
                    "privateResolver_Outbound_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
                    },
                    "virtualNetwork_Name": {
                      "type": "string",
                      "value": "[parameters('virtualNetwork_Name')]"
                    },
                    "virtualNetwork_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
                    },
                    "virtualNetwork_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
                    },
                    "routeTable_Name": {
                      "type": "string",
                      "value": "[parameters('routeTable_Name')]"
                    },
                    "routeTable_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                    },
                    "networkSecurityGroup_Name": {
                      "type": "string",
                      "value": "[parameters('networkSecurityGroup_Default_Name')]"
                    },
                    "networkSecurityGroup_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "virtualHubToVirtualNetworkSpokeAConn",
                "count": "[length(range(0, length(parameters('virtualNetwork_AddressPrefixs'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vhubA_to_spoke{0}_Conn', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualHub_Name": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.virtualHub_Name.value]"
                  },
                  "virtualHub_RouteTable_Default_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.virtualHub_RouteTable_Default_ID.value]"
                  },
                  "virtualNetwork_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]])), '2022-09-01').outputs.virtualNetwork_ID.value]"
                  },
                  "virtualNetwork_Name": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]])), '2022-09-01').outputs.virtualNetwork_Name.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "8464979538020394213"
                    }
                  },
                  "parameters": {
                    "virtualHub_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Hub that will connect to a Virtual Network"
                      }
                    },
                    "virtualNetwork_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Network that will connect to a Virtual Hub"
                      }
                    },
                    "virtualHub_RouteTable_Default_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the Virtual Hub's Default Route Table that will be applied to the Virtual Network"
                      }
                    },
                    "virtualNetwork_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the Virtual Network that will connect to a Virtual Hub"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('virtualHub_Name'), format('{0}_to_{1}', parameters('virtualHub_Name'), parameters('virtualNetwork_Name')))]",
                      "properties": {
                        "routingConfiguration": {
                          "associatedRouteTable": {
                            "id": "[parameters('virtualHub_RouteTable_Default_ID')]"
                          },
                          "propagatedRouteTables": {
                            "labels": [
                              "default"
                            ],
                            "ids": [
                              {
                                "id": "[parameters('virtualHub_RouteTable_Default_ID')]"
                              }
                            ]
                          },
                          "vnetRoutes": {
                            "staticRoutes": [],
                            "staticRoutesConfig": {
                              "vnetLocalRouteOverrideCriteria": "Contains"
                            }
                          }
                        },
                        "remoteVirtualNetwork": {
                          "id": "[parameters('virtualNetwork_ID')]"
                        },
                        "allowHubToRemoteVnetTransit": true,
                        "allowRemoteVnetToUseHubVnetGateways": true,
                        "enableInternetSecurity": true
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vhub')]",
                "[resourceId('Microsoft.Resources/deployments', format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]]))]",
                "[resourceId('Microsoft.Resources/deployments', format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]]))]"
              ]
            },
            {
              "copy": {
                "name": "virtualMachine_Windows",
                "count": "[length(range(0, length(parameters('virtualNetwork_AddressPrefixs'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('windowsVM{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": false
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnet_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]])), '2022-09-01').outputs.general_SubnetID.value]"
                  },
                  "virtualMachine_AdminPassword": {
                    "value": "[parameters('virtualMachine_AdminPassword')]"
                  },
                  "virtualMachine_AdminUsername": {
                    "value": "[parameters('virtualMachine_AdminUsername')]"
                  },
                  "virtualMachine_Name": {
                    "value": "[format('winVM{0}{1}', reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.virtualHub_Name.value, range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()])]"
                  },
                  "virtualMachine_Size": {
                    "value": "Standard_B2ms"
                  },
                  "virtualMachine_ScriptFileLocation": {
                    "value": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/"
                  },
                  "virtualMachine_ScriptFileName": {
                    "value": "WinServ2022_ConfigScript_General.ps1"
                  },
                  "commandToExecute": {
                    "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "13304526460507877092"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "virtualMachine_Name": {
                      "type": "string",
                      "maxLength": 15,
                      "metadata": {
                        "description": "Name of the Virtual Machine"
                      }
                    },
                    "virtualMachine_Size": {
                      "type": "string",
                      "metadata": {
                        "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
                      }
                    },
                    "virtualMachine_AdminUsername": {
                      "type": "string",
                      "metadata": {
                        "description": "Admin Username for the Virtual Machine"
                      }
                    },
                    "virtualMachine_AdminPassword": {
                      "type": "securestring",
                      "metadata": {
                        "description": "Password for the Virtual Machine Admin User"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "virtualMachine_ScriptFileLocation": {
                      "type": "string",
                      "metadata": {
                        "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
                      }
                    },
                    "virtualMachine_ScriptFileName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
                      }
                    },
                    "commandToExecute": {
                      "type": "string",
                      "metadata": {
                        "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('virtualMachine_Name')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('virtualMachine_Size')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "2022-datacenter-azure-edition",
                            "version": "latest"
                          },
                          "osDisk": {
                            "osType": "Windows",
                            "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                              "storageAccountType": "Standard_LRS"
                            },
                            "deleteOption": "Delete",
                            "diskSizeGB": 127
                          },
                          "dataDisks": [],
                          "diskControllerType": "SCSI"
                        },
                        "osProfile": {
                          "computerName": "[parameters('virtualMachine_Name')]",
                          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": true,
                            "patchSettings": {
                              "patchMode": "AutomaticByOS",
                              "assessmentMode": "ImageDefault",
                              "enableHotpatching": false
                            },
                            "enableVMAgentPlatformUpdates": false
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": true
                          }
                        }
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "autoUpgradeMinorVersion": true,
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-11-01",
                      "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [
                            "[variables('virtualMachine_ScriptFileUri')]"
                          ]
                        },
                        "protectedSettings": {
                          "commandToExecute": "[parameters('commandToExecute')]"
                        }
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "acceleratedNetworking": {
                            "value": "[parameters('acceleratedNetworking')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "networkInterface_Name": {
                            "value": "[parameters('networkInterface_Name')]"
                          },
                          "subnet_ID": {
                            "value": "[parameters('subnet_ID')]"
                          },
                          "addPublicIPAddress": {
                            "value": "[parameters('addPublicIPAddress')]"
                          },
                          "privateIPAllocationMethod": {
                            "value": "[parameters('privateIPAllocationMethod')]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('privateIPAddress')]"
                          },
                          "tagValues": {
                            "value": "[parameters('tagValues')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.34.60546",
                              "templateHash": "13059194259010041159"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure Datacenter that the resource is deployed to"
                              }
                            },
                            "networkInterface_Name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Virtual Machines Network Interface"
                              }
                            },
                            "acceleratedNetworking": {
                              "type": "bool",
                              "metadata": {
                                "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                              }
                            },
                            "privateIPAllocationMethod": {
                              "type": "string",
                              "defaultValue": "Dynamic",
                              "allowedValues": [
                                "Dynamic",
                                "Static"
                              ],
                              "metadata": {
                                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                              }
                            },
                            "subnet_ID": {
                              "type": "string",
                              "metadata": {
                                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                              }
                            },
                            "addPublicIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                              }
                            },
                            "tagValues": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('addPublicIPAddress'))]",
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2022-09-01",
                              "name": "[parameters('networkInterface_Name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig0",
                                    "properties": {
                                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                                      "subnet": {
                                        "id": "[parameters('subnet_ID')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4",
                                      "privateIPAddress": "[parameters('privateIPAddress')]"
                                    }
                                  }
                                ],
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "enableIPForwarding": true,
                                "disableTcpStateTracking": false,
                                "nicType": "Standard"
                              },
                              "tags": "[parameters('tagValues')]"
                            },
                            {
                              "condition": "[parameters('addPublicIPAddress')]",
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2022-09-01",
                              "name": "[parameters('networkInterface_Name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig0",
                                    "properties": {
                                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                                      "subnet": {
                                        "id": "[parameters('subnet_ID')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4",
                                      "privateIPAddress": "[parameters('privateIPAddress')]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                                      }
                                    }
                                  }
                                ],
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "enableIPForwarding": false,
                                "disableTcpStateTracking": false,
                                "nicType": "Standard"
                              },
                              "tags": "[parameters('tagValues')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              ]
                            },
                            {
                              "condition": "[parameters('addPublicIPAddress')]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2023-06-01",
                              "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                              "location": "[parameters('location')]",
                              "sku": {
                                "name": "Standard",
                                "tier": "Regional"
                              },
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static",
                                "idleTimeoutInMinutes": 4,
                                "ipTags": []
                              },
                              "tags": "[parameters('tagValues')]"
                            }
                          ],
                          "outputs": {
                            "networkInterface_Name": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                            },
                            "networkInterface_ID": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                            },
                            "networkInterface_IPConfig0_Name": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                            },
                            "networkInterface_IPConfig0_ID": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                            },
                            "networkInterface_PrivateIPAddress": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                            },
                            "networkInterface_PublicIPAddress": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "virtualMachine_Name": {
                      "type": "string",
                      "value": "[parameters('virtualMachine_Name')]"
                    },
                    "virtualMachine_Id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vhub')]",
                "[resourceId('Microsoft.Resources/deployments', format('spokeVNet{0}', range(0, length(parameters('virtualNetwork_AddressPrefixs')))[range(0, length(parameters('virtualNetwork_AddressPrefixs')))[copyIndex()]]))]"
              ]
            }
          ],
          "outputs": {
            "virtualWAN_ID": {
              "type": "string",
              "value": "[parameters('virtualWAN_ID')]"
            },
            "virtualHub_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.virtualHub_Name.value]"
            },
            "virtualHub_RouteTable_Default_ResourceID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.virtualHub_RouteTable_Default_ID.value]"
            },
            "virtualWAN_VPNGateway_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.vpnGateway_Name.value]"
            },
            "virtualHub_VPNGateway_Name_Array": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.vpnGateway_Name_Array.value]"
            },
            "virtualHub_VPNGateway_PublicIPAddresses": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.vpnGateway_PublicIPAddresses.value]"
            },
            "virtualHub_VPNGateway_BGPAddresses": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.vpnGateway_BGPAddresses.value]"
            },
            "virtualHub_VPNGateway_ASN": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vhub'), '2022-09-01').outputs.vpnGateway_ASN.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualWAN')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vhubA_to_OnPrem",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "destinationVPN_ASN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremResources'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
          },
          "destinationVPN_BGPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremResources'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
          },
          "destinationVPN_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremResources'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
          },
          "destinationVPN_PublicAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremResources'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
          },
          "location": {
            "value": "[parameters('mainLocation')]"
          },
          "virtualHub_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualHub_Name.value]"
          },
          "virtualHub_RouteTable_Default_ResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualHub_RouteTable_Default_ResourceID.value]"
          },
          "virtualWAN_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualWAN_ID.value]"
          },
          "virtualWAN_VPNGateway_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualWAN_ID.value]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.34.60546",
              "templateHash": "8338229029362298547"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter region to which these resources will be deployed."
              }
            },
            "virtualWAN_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Virtual WAN to which the Virtual Hub is connected."
              }
            },
            "virtualHub_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Hub"
              }
            },
            "virtualHub_RouteTable_Default_ResourceID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Default Route Table in the Virtual Hub."
              }
            },
            "virtualWAN_VPNGateway_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the VPN Gateway in the Virtual Hub."
              }
            },
            "destinationVPN_Name": {
              "type": "string",
              "metadata": {
                "description": "Friendly Name of the destination VPN."
              }
            },
            "destinationVPN_PublicAddress": {
              "type": "string",
              "metadata": {
                "description": "Public IP Address of the destination VPN."
              }
            },
            "destinationVPN_ASN": {
              "type": "int",
              "metadata": {
                "description": "ASN of the destination VPN for BGP connectivity."
              }
            },
            "destinationVPN_BGPAddress": {
              "type": "string",
              "metadata": {
                "description": "BGP Address of the destination VPN."
              }
            },
            "vpn_SharedKey": {
              "type": "securestring",
              "metadata": {
                "description": "VPN Shared Key used for authenticating VPN connections.  This Shared Key must be the same key that is used on the Virtual Network Gateway that is being connected to the vWAN's S2S VPNs."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/vpnSites",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_to_{1}', parameters('virtualHub_Name'), parameters('destinationVPN_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "deviceProperties": {
                  "deviceVendor": "Azure",
                  "linkSpeedInMbps": 0
                },
                "virtualWan": {
                  "id": "[parameters('virtualWAN_ID')]"
                },
                "isSecuritySite": false,
                "o365Policy": {
                  "breakOutCategories": {
                    "optimize": false,
                    "allow": false,
                    "default": false
                  }
                },
                "vpnSiteLinks": [
                  {
                    "name": "[parameters('destinationVPN_Name')]",
                    "properties": {
                      "ipAddress": "[parameters('destinationVPN_PublicAddress')]",
                      "bgpProperties": {
                        "asn": "[parameters('destinationVPN_ASN')]",
                        "bgpPeeringAddress": "[parameters('destinationVPN_BGPAddress')]"
                      },
                      "linkProperties": {
                        "linkProviderName": "Azure",
                        "linkSpeedInMbps": 200
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/vpnGateways/vpnConnections",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualWAN_VPNGateway_Name'), 'Connection-to_main_hub')]",
              "properties": {
                "routingConfiguration": {
                  "associatedRouteTable": {
                    "id": "[parameters('virtualHub_RouteTable_Default_ResourceID')]"
                  },
                  "propagatedRouteTables": {
                    "labels": [
                      "default"
                    ],
                    "ids": [
                      {
                        "id": "[parameters('virtualHub_RouteTable_Default_ResourceID')]"
                      }
                    ]
                  }
                },
                "enableInternetSecurity": false,
                "remoteVpnSite": {
                  "id": "[resourceId('Microsoft.Network/vpnSites', format('{0}_to_{1}', parameters('virtualHub_Name'), parameters('destinationVPN_Name')))]"
                },
                "vpnLinkConnections": [
                  {
                    "name": "[format('{0}_to_OnPrem', parameters('virtualHub_Name'))]",
                    "properties": {
                      "vpnSiteLink": {
                        "id": "[reference(resourceId('Microsoft.Network/vpnSites', format('{0}_to_{1}', parameters('virtualHub_Name'), parameters('destinationVPN_Name'))), '2022-11-01').vpnSiteLinks[0].id]"
                      },
                      "connectionBandwidth": 10,
                      "ipsecPolicies": [
                        {
                          "saLifeTimeSeconds": 3600,
                          "saDataSizeKilobytes": 0,
                          "ipsecEncryption": "AES256",
                          "ipsecIntegrity": "SHA256",
                          "ikeEncryption": "AES256",
                          "ikeIntegrity": "SHA256",
                          "dhGroup": "DHGroup14",
                          "pfsGroup": "None"
                        }
                      ],
                      "vpnConnectionProtocolType": "IKEv2",
                      "sharedKey": "[parameters('vpn_SharedKey')]",
                      "enableBgp": true,
                      "enableRateLimiting": false,
                      "useLocalAzureIpAddress": false,
                      "usePolicyBasedTrafficSelectors": false,
                      "routingWeight": 0,
                      "vpnLinkConnectionMode": "Default",
                      "vpnGatewayCustomBgpAddresses": []
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/vpnSites', format('{0}_to_{1}', parameters('virtualHub_Name'), parameters('destinationVPN_Name')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'OnPremResources')]",
        "[resourceId('Microsoft.Resources/deployments', 'vHubA')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPremResources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('onPremLocation')]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "usingAzureFirewall": {
            "value": false
          },
          "virtualNetwork_AddressPrefix": {
            "value": "10.200.0.0/16"
          },
          "azureFirewall_SKU": {
            "value": "Basic"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.34.60546",
              "templateHash": "9662534352985979617"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "metadata": {
                "description": "Address Prefix of the Virtual Network."
              }
            },
            "usingAzureFirewall": {
              "type": "bool",
              "metadata": {
                "description": "Deploys a Az FW if true"
              }
            },
            "azureFirewall_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Sku name of the Azure Firewall."
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "OnPrem_VNET",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "virtualNetwork_AddressPrefix": {
                    "value": "[parameters('virtualNetwork_AddressPrefix')]"
                  },
                  "virtualNetwork_Name": {
                    "value": "OnPrem_VNet_Hub"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "10263754388870337008"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "virtualNetwork_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Network"
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
                      }
                    },
                    "networkSecurityGroup_Default_Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
                      "metadata": {
                        "description": "Name of the General Network Security Group"
                      }
                    },
                    "routeTable_Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
                      "metadata": {
                        "description": "Name of the General Route Table"
                      }
                    },
                    "virtualNetwork_AddressPrefix": {
                      "type": "string"
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "copy": [
                      {
                        "name": "subnet_AddressRangeCIDRs",
                        "count": "[length(range(0, 255))]",
                        "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
                      }
                    ],
                    "subnet_Names": [
                      "General",
                      "PrivateEndpoints",
                      "PrivateLinkService",
                      "ApplicationGatewaySubnet",
                      "AppServiceSubnet",
                      "GatewaySubnet",
                      "AzureFirewallSubnet",
                      "AzureFirewallManagementSubnet",
                      "AzureBastionSubnet",
                      "PrivateResolver_Inbound",
                      "PrivateResolver_Outbound"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('virtualNetwork_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "dhcpOptions": {
                          "dnsServers": "[parameters('dnsServers')]"
                        },
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('virtualNetwork_AddressPrefix')]"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "[variables('subnet_Names')[0]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[1]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[2]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Disabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[3]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[4]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                              },
                              "delegations": [
                                {
                                  "name": "delegation",
                                  "properties": {
                                    "serviceName": "Microsoft.Web/serverfarms"
                                  },
                                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                              ],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[5]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                              },
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[6]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[7]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[8]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                              "delegations": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[9]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                              "delegations": [
                                {
                                  "name": "Microsoft.Network.dnsResolvers",
                                  "properties": {
                                    "serviceName": "Microsoft.Network/dnsResolvers"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "[variables('subnet_Names')[10]]",
                            "properties": {
                              "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                              "delegations": [
                                {
                                  "name": "Microsoft.Network.dnsResolvers",
                                  "properties": {
                                    "serviceName": "Microsoft.Network/dnsResolvers"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "enableDdosProtection": false
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                        "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('routeTable_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": false
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkSecurityGroup_Default_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {},
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowGatewayManager",
                            "properties": {
                              "description": "Allow GatewayManager",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "65200-65535",
                              "sourceAddressPrefix": "GatewayManager",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 1000,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "AllowHTTPS",
                            "properties": {
                              "description": "Allow HTTPS",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 1001,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "general_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
                    },
                    "privateEndpoint_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
                    },
                    "privateLinkService_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
                    },
                    "applicationGateway_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
                    },
                    "appService_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
                    },
                    "gateway_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
                    },
                    "azureFirewall_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
                    },
                    "azureFirewallManagement_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
                    },
                    "bastion_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
                    },
                    "privateResolver_Inbound_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
                    },
                    "privateResolver_Outbound_SubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
                    },
                    "general_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
                    },
                    "privateEndpoint_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
                    },
                    "privateLinkService_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
                    },
                    "applicationGateway_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
                    },
                    "appService_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
                    },
                    "gateway_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
                    },
                    "azureFirewall_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
                    },
                    "azureFirewallManagement_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
                    },
                    "bastion_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
                    },
                    "privateResolver_Inbound_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
                    },
                    "privateResolver_Outbound_Subnet_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
                    },
                    "virtualNetwork_Name": {
                      "type": "string",
                      "value": "[parameters('virtualNetwork_Name')]"
                    },
                    "virtualNetwork_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
                    },
                    "virtualNetwork_AddressPrefix": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
                    },
                    "routeTable_Name": {
                      "type": "string",
                      "value": "[parameters('routeTable_Name')]"
                    },
                    "routeTable_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                    },
                    "networkSecurityGroup_Name": {
                      "type": "string",
                      "value": "[parameters('networkSecurityGroup_Default_Name')]"
                    },
                    "networkSecurityGroup_ID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('usingAzureFirewall')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "OnPrem_AzFW",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "azureFirewall_Name": {
                    "value": "OnPrem_AzFW"
                  },
                  "azureFirewall_SKU": {
                    "value": "[parameters('azureFirewall_SKU')]"
                  },
                  "azureFirewallPolicy_Name": {
                    "value": "OnPrem_AzFWPolicy"
                  },
                  "azureFirewall_Subnet_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET'), '2022-09-01').outputs.azureFirewall_SubnetID.value]"
                  },
                  "azureFirewall_ManagementSubnet_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET'), '2022-09-01').outputs.azureFirewallManagement_SubnetID.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "4380001811983798787"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter location that the main resouces will be deployed to."
                      }
                    },
                    "azureFirewall_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Firewall within the vHub A"
                      }
                    },
                    "azureFirewall_SKU": {
                      "type": "string",
                      "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "metadata": {
                        "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
                      }
                    },
                    "azureFirewallPolicy_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Firewall Policy"
                      }
                    },
                    "azureFirewall_Subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the Azure Firewall Subnet.  Note: The subnet name must be \"AzureFirewallSubnet"
                      }
                    },
                    "azureFirewall_ManagementSubnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the Azure Firewall Management Subnet.  Note: The subnet name must be \"AzureFirewallManagementSubnet"
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP', parameters('azureFirewall_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_Management_PIP', parameters('azureFirewall_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('azureFirewallPolicy_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "tier": "[parameters('azureFirewall_SKU')]"
                        }
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('azureFirewall_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "name": "AZFW_VNet",
                          "tier": "[parameters('azureFirewall_SKU')]"
                        },
                        "additionalProperties": {},
                        "managementIpConfiguration": {
                          "name": "managementipconfig",
                          "properties": {
                            "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]"
                            },
                            "subnet": {
                              "id": "[parameters('azureFirewall_ManagementSubnet_ID')]"
                            }
                          }
                        },
                        "ipConfigurations": [
                          {
                            "name": "ipconfiguration",
                            "properties": {
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]"
                              },
                              "subnet": {
                                "id": "[parameters('azureFirewall_Subnet_ID')]"
                              }
                            }
                          }
                        ],
                        "firewallPolicy": {
                          "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
                        }
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]",
                        "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('azureFirewallPolicy_Name'), 'DefaultNetworkRuleCollectionGroup')]",
                      "properties": {
                        "priority": 200,
                        "ruleCollections": [
                          {
                            "name": "allowall",
                            "priority": 100,
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "rules": [
                              {
                                "ruleType": "NetworkRule",
                                "name": "any",
                                "ipProtocols": [
                                  "any"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [
                                  "*"
                                ],
                                "destinationPorts": [
                                  "*"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "azureFirewall_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall_Name')), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET')]",
                "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VPN')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "OnPrem_VPN",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "virtualNetworkGateway_Name": {
                    "value": "OnPrem_VirtualNetworkGateway"
                  },
                  "virtualNetworkGateway_ASN": {
                    "value": 65301
                  },
                  "virtualNetworkGateway_Subnet_ResourceID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET'), '2022-09-01').outputs.gateway_SubnetID.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "13609541206309054438"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resources are deployed to"
                      }
                    },
                    "virtualNetworkGateway_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Virtual Network Gateway"
                      }
                    },
                    "virtualNetworkGateway_SKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1",
                      "allowedValues": [
                        "Basic",
                        "VpnGw1",
                        "VpnGw2",
                        "VpnGw3",
                        "VpnGw4",
                        "VpnGw5",
                        "VpnGw1AZ",
                        "VpnGw2AZ",
                        "VpnGw3AZ",
                        "VpnGw4AZ",
                        "VpnGw5AZ"
                      ],
                      "metadata": {
                        "description": "SKU of the Virtual Network Gateway"
                      }
                    },
                    "vpnGatewayGeneration": {
                      "type": "string",
                      "defaultValue": "Generation1",
                      "allowedValues": [
                        "Generation1",
                        "Generation2"
                      ],
                      "metadata": {
                        "description": "Generation of the Virtual Network Gateway SKU\nGeneration1: Basic, VpnGw1-3, VpnGw1-3AZ\nGeneration2: VpnGw2-5, VpnGw2-5Az"
                      }
                    },
                    "virtualNetworkGateway_ASN": {
                      "type": "int",
                      "metadata": {
                        "description": "Virtul Network Gateway ASN for BGP"
                      }
                    },
                    "virtualNetworkGateway_Subnet_ResourceID": {
                      "type": "string",
                      "metadata": {
                        "description": "Virtual Network Resource ID"
                      }
                    },
                    "activeActive": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Configures the Virtual Network Gateway as Active Active with two Public IP Addresses if True.  Default is False."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "ipConfiguration": "[if(parameters('activeActive'), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))))), createObject('properties', createObject('name', 'vNetGatewayConfig2', 'privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))))))), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))))))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('activeActive')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('virtualNetworkGateway_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "enablePrivateIpAddress": false,
                        "ipConfigurations": "[variables('ipConfiguration')]",
                        "natRules": [],
                        "virtualNetworkGatewayPolicyGroups": [],
                        "enableBgpRouteTranslationForNat": false,
                        "disableIPSecReplayProtection": false,
                        "sku": {
                          "name": "[parameters('virtualNetworkGateway_SKU')]",
                          "tier": "[parameters('virtualNetworkGateway_SKU')]"
                        },
                        "gatewayType": "Vpn",
                        "vpnType": "RouteBased",
                        "enableBgp": true,
                        "activeActive": "[parameters('activeActive')]",
                        "bgpSettings": {
                          "asn": "[parameters('virtualNetworkGateway_ASN')]",
                          "peerWeight": 0
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
                        "allowRemoteVnetTraffic": false,
                        "allowVirtualWanTraffic": false
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "virtualNetworkGateway_ResourceID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
                    },
                    "virtualNetworkGateway_Name": {
                      "type": "string",
                      "value": "[parameters('virtualNetworkGateway_Name')]"
                    },
                    "virtualNetworkGateway_BGPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
                    },
                    "virtualNetworkGateway_ActiveActive_BGPAddress1": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0], '')]"
                    },
                    "virtualNetworkGateway_ActiveActive_BGPAddress2": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0], '')]"
                    },
                    "virtualNetworkGateway_ASN": {
                      "type": "int",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
                    },
                    "virtualNetworkGateway_PublicIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
                    },
                    "virtualNetworkGateway_ActiveActive_PublicIPAddress02": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress, '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "OnPrem_Bastion",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "bastion_name": {
                    "value": "[format('{0}_Bastion', reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET'), '2022-09-01').outputs.virtualNetwork_Name.value)]"
                  },
                  "bastion_SubnetID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET'), '2022-09-01').outputs.bastion_SubnetID.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "11534259321289650232"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter location that the main resouces will be deployed to."
                      }
                    },
                    "bastion_name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Bastion"
                      }
                    },
                    "bastion_SubnetID": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
                      }
                    },
                    "bastion_SKU": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "allowedValues": [
                        "Basic",
                        "Standard"
                      ],
                      "metadata": {
                        "description": "SKU of the Azure Bastion"
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('bastion_name')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('bastion_SKU')]"
                      },
                      "properties": {
                        "scaleUnits": 2,
                        "enableTunneling": false,
                        "enableIpConnect": false,
                        "disableCopyPaste": false,
                        "enableShareableLink": false,
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                              },
                              "subnet": {
                                "id": "[parameters('bastion_SubnetID')]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}_VIP', parameters('bastion_name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "OnPrem_WinVM",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": false
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnet_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET'), '2022-09-01').outputs.general_SubnetID.value]"
                  },
                  "virtualMachine_AdminPassword": {
                    "value": "[parameters('virtualMachine_AdminPassword')]"
                  },
                  "virtualMachine_AdminUsername": {
                    "value": "[parameters('virtualMachine_AdminUsername')]"
                  },
                  "virtualMachine_Name": {
                    "value": "OnPremWinVM"
                  },
                  "virtualMachine_Size": {
                    "value": "Standard_B2ms"
                  },
                  "virtualMachine_ScriptFileLocation": {
                    "value": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/"
                  },
                  "virtualMachine_ScriptFileName": {
                    "value": "WinServ2022_ConfigScript_General.ps1"
                  },
                  "commandToExecute": {
                    "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.34.60546",
                      "templateHash": "13304526460507877092"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "virtualMachine_Name": {
                      "type": "string",
                      "maxLength": 15,
                      "metadata": {
                        "description": "Name of the Virtual Machine"
                      }
                    },
                    "virtualMachine_Size": {
                      "type": "string",
                      "metadata": {
                        "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
                      }
                    },
                    "virtualMachine_AdminUsername": {
                      "type": "string",
                      "metadata": {
                        "description": "Admin Username for the Virtual Machine"
                      }
                    },
                    "virtualMachine_AdminPassword": {
                      "type": "securestring",
                      "metadata": {
                        "description": "Password for the Virtual Machine Admin User"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "virtualMachine_ScriptFileLocation": {
                      "type": "string",
                      "metadata": {
                        "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
                      }
                    },
                    "virtualMachine_ScriptFileName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
                      }
                    },
                    "commandToExecute": {
                      "type": "string",
                      "metadata": {
                        "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('virtualMachine_Name')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('virtualMachine_Size')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "2022-datacenter-azure-edition",
                            "version": "latest"
                          },
                          "osDisk": {
                            "osType": "Windows",
                            "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                              "storageAccountType": "Standard_LRS"
                            },
                            "deleteOption": "Delete",
                            "diskSizeGB": 127
                          },
                          "dataDisks": [],
                          "diskControllerType": "SCSI"
                        },
                        "osProfile": {
                          "computerName": "[parameters('virtualMachine_Name')]",
                          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": true,
                            "patchSettings": {
                              "patchMode": "AutomaticByOS",
                              "assessmentMode": "ImageDefault",
                              "enableHotpatching": false
                            },
                            "enableVMAgentPlatformUpdates": false
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": true
                          }
                        }
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "autoUpgradeMinorVersion": true,
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-11-01",
                      "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [
                            "[variables('virtualMachine_ScriptFileUri')]"
                          ]
                        },
                        "protectedSettings": {
                          "commandToExecute": "[parameters('commandToExecute')]"
                        }
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "acceleratedNetworking": {
                            "value": "[parameters('acceleratedNetworking')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "networkInterface_Name": {
                            "value": "[parameters('networkInterface_Name')]"
                          },
                          "subnet_ID": {
                            "value": "[parameters('subnet_ID')]"
                          },
                          "addPublicIPAddress": {
                            "value": "[parameters('addPublicIPAddress')]"
                          },
                          "privateIPAllocationMethod": {
                            "value": "[parameters('privateIPAllocationMethod')]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('privateIPAddress')]"
                          },
                          "tagValues": {
                            "value": "[parameters('tagValues')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.34.60546",
                              "templateHash": "13059194259010041159"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure Datacenter that the resource is deployed to"
                              }
                            },
                            "networkInterface_Name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Virtual Machines Network Interface"
                              }
                            },
                            "acceleratedNetworking": {
                              "type": "bool",
                              "metadata": {
                                "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                              }
                            },
                            "privateIPAllocationMethod": {
                              "type": "string",
                              "defaultValue": "Dynamic",
                              "allowedValues": [
                                "Dynamic",
                                "Static"
                              ],
                              "metadata": {
                                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                              }
                            },
                            "subnet_ID": {
                              "type": "string",
                              "metadata": {
                                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                              }
                            },
                            "addPublicIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                              }
                            },
                            "tagValues": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('addPublicIPAddress'))]",
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2022-09-01",
                              "name": "[parameters('networkInterface_Name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig0",
                                    "properties": {
                                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                                      "subnet": {
                                        "id": "[parameters('subnet_ID')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4",
                                      "privateIPAddress": "[parameters('privateIPAddress')]"
                                    }
                                  }
                                ],
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "enableIPForwarding": true,
                                "disableTcpStateTracking": false,
                                "nicType": "Standard"
                              },
                              "tags": "[parameters('tagValues')]"
                            },
                            {
                              "condition": "[parameters('addPublicIPAddress')]",
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2022-09-01",
                              "name": "[parameters('networkInterface_Name')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig0",
                                    "properties": {
                                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                                      "subnet": {
                                        "id": "[parameters('subnet_ID')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4",
                                      "privateIPAddress": "[parameters('privateIPAddress')]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                                      }
                                    }
                                  }
                                ],
                                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                                "enableIPForwarding": false,
                                "disableTcpStateTracking": false,
                                "nicType": "Standard"
                              },
                              "tags": "[parameters('tagValues')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              ]
                            },
                            {
                              "condition": "[parameters('addPublicIPAddress')]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2023-06-01",
                              "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                              "location": "[parameters('location')]",
                              "sku": {
                                "name": "Standard",
                                "tier": "Regional"
                              },
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static",
                                "idleTimeoutInMinutes": 4,
                                "ipTags": []
                              },
                              "tags": "[parameters('tagValues')]"
                            }
                          ],
                          "outputs": {
                            "networkInterface_Name": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                            },
                            "networkInterface_ID": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                            },
                            "networkInterface_IPConfig0_Name": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                            },
                            "networkInterface_IPConfig0_ID": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                            },
                            "networkInterface_PrivateIPAddress": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                            },
                            "networkInterface_PublicIPAddress": {
                              "type": "string",
                              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "virtualMachine_Name": {
                      "type": "string",
                      "value": "[parameters('virtualMachine_Name')]"
                    },
                    "virtualMachine_Id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'OnPrem_VNET')]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkGateway_ResourceID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VPN'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
            },
            "virtualNetworkGateway_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VPN'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
            },
            "virtualNetworkGateway_PublicIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VPN'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
            },
            "virtualNetworkGateway_BGPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VPN'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
            },
            "virtualNetworkGateway_ASN": {
              "type": "int",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPrem_VPN'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OnPrem_to_VHubA",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "destinationVPN_ASN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualHub_VPNGateway_ASN.value]"
          },
          "destinationVPN_BGPAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualHub_VPNGateway_BGPAddresses.value]"
          },
          "destinationVPN_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualHub_VPNGateway_Name_Array.value]"
          },
          "destinationVPN_PublicAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vHubA'), '2022-09-01').outputs.virtualHub_VPNGateway_PublicIPAddresses.value]"
          },
          "location": {
            "value": "[parameters('onPremLocation')]"
          },
          "source_VirtualNetworkGateway_ResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'OnPremResources'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.34.60546",
              "templateHash": "6639829061621120644"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resources are deployed to"
              }
            },
            "destinationVPN_Name": {
              "type": "array",
              "metadata": {
                "description": "Friendly Name of the Destination Virtual Hub VPN Gateway"
              }
            },
            "destinationVPN_PublicAddress": {
              "type": "array",
              "metadata": {
                "description": "Public IP Address of the destination VPN."
              }
            },
            "destinationVPN_ASN": {
              "type": "array",
              "metadata": {
                "description": "ASN of the destination VPN for BGP connectivity."
              }
            },
            "destinationVPN_BGPAddress": {
              "type": "array",
              "metadata": {
                "description": "BGP Address of the destination VPN."
              }
            },
            "vpn_SharedKey": {
              "type": "securestring",
              "metadata": {
                "description": "VPN Shared Key used for authenticating VPN connections"
              }
            },
            "source_VirtualNetworkGateway_ResourceID": {
              "type": "string",
              "metadata": {
                "description": "Existing Virtual Network Gateway ID"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "connection",
                "count": "[length(range(0, length(parameters('destinationVPN_Name'))))]"
              },
              "type": "Microsoft.Network/connections",
              "apiVersion": "2022-11-01",
              "name": "[format('OnPrem_to_{0}', parameters('destinationVPN_Name')[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]])]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[parameters('source_VirtualNetworkGateway_ResourceID')]",
                  "properties": {}
                },
                "localNetworkGateway2": {
                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('OnPrem_lng_for_{0}', parameters('destinationVPN_Name')[range(0, length(parameters('destinationVPN_Name')))[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]]]))]",
                  "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[parameters('vpn_SharedKey')]",
                "enableBgp": true,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [
                  {
                    "saLifeTimeSeconds": 3600,
                    "saDataSizeKilobytes": 102400000,
                    "ipsecEncryption": "AES256",
                    "ipsecIntegrity": "SHA256",
                    "ikeEncryption": "AES256",
                    "ikeIntegrity": "SHA256",
                    "dhGroup": "DHGroup14",
                    "pfsGroup": "None"
                  }
                ],
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', format('OnPrem_lng_for_{0}', parameters('destinationVPN_Name')[range(0, length(parameters('destinationVPN_Name')))[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]]]))]"
              ]
            },
            {
              "copy": {
                "name": "localNetworkGateway",
                "count": "[length(range(0, length(parameters('destinationVPN_Name'))))]"
              },
              "type": "Microsoft.Network/localNetworkGateways",
              "apiVersion": "2022-11-01",
              "name": "[format('OnPrem_lng_for_{0}', parameters('destinationVPN_Name')[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]])]",
              "location": "[parameters('location')]",
              "properties": {
                "gatewayIpAddress": "[parameters('destinationVPN_PublicAddress')[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]]]",
                "bgpSettings": {
                  "asn": "[parameters('destinationVPN_ASN')[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]]]",
                  "bgpPeeringAddress": "[parameters('destinationVPN_BGPAddress')[range(0, length(parameters('destinationVPN_Name')))[copyIndex()]]]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'OnPremResources')]",
        "[resourceId('Microsoft.Resources/deployments', 'vHubA')]"
      ]
    }
  ]
}
